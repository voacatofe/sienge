services:
  # Banco de dados PostgreSQL
  db:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - '${DB_PORT_EXTERNAL:-5432}:${DB_PORT_INTERNAL:-5432}'
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - sienge-network
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'pg_isready -U ${POSTGRES_USER:-sienge_app} -d ${POSTGRES_DB:-sienge_data}',
        ]
      interval: ${DB_HEALTH_INTERVAL:-30s}
      timeout: ${DB_HEALTH_TIMEOUT:-10s}
      retries: 3
    # Configurações de segurança e recursos
    security_opt:
      - no-new-privileges:true
    deploy:
      resources:
        limits:
          memory: ${DB_MEMORY_LIMIT:-1G}
          cpus: '${DB_CPU_LIMIT:-1.0}'
        reservations:
          memory: ${DB_MEMORY_RESERVATION:-512M}
          cpus: '${DB_CPU_RESERVATION:-0.5}'
    # Configurações de logging
    logging:
      driver: 'json-file'
      options:
        max-size: '${DB_LOG_MAX_SIZE:-10m}'
        max-file: '${DB_LOG_MAX_FILES:-3}'

  # Aplicação Next.js
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        NODE_ENV: ${NODE_ENV:-development}
        BUILD_TARGET: ${BUILD_TARGET:-development}
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DATABASE_URL
      - POSTGRES_HOST
      - POSTGRES_PORT
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - NEXT_PUBLIC_APP_URL
      - SIENGE_SUBDOMAIN
      - SIENGE_USERNAME
      - SIENGE_PASSWORD
      - SYNC_SCHEDULE
      - SYNC_BATCH_SIZE
      - SYNC_MAX_RETRIES
    ports:
      - '${APP_PORT_EXTERNAL:-3000}:${APP_PORT_INTERNAL:-3000}'
    depends_on:
      db:
        condition: service_healthy
    networks:
      - sienge-network
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3000/api/health']
      interval: ${APP_HEALTH_INTERVAL:-30s}
      timeout: ${APP_HEALTH_TIMEOUT:-10s}
      retries: 3
    # Configurações de segurança e recursos
    security_opt:
      - no-new-privileges:true
    deploy:
      resources:
        limits:
          memory: ${APP_MEMORY_LIMIT:-2G}
          cpus: '${APP_CPU_LIMIT:-2.0}'
        reservations:
          memory: ${APP_MEMORY_RESERVATION:-1G}
          cpus: '${APP_CPU_RESERVATION:-1.0}'
    # Configurações de logging
    logging:
      driver: 'json-file'
      options:
        max-size: '${APP_LOG_MAX_SIZE:-10m}'
        max-file: '${APP_LOG_MAX_FILES:-3}'

  # Adminer - Interface Web para Administração do Banco de Dados
  adminer:
    image: adminer:latest
    restart: unless-stopped
    ports:
      - '${ADMINER_PORT_EXTERNAL:-8080}:8080'
    networks:
      - sienge-network
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8080']
      interval: ${ADMINER_HEALTH_INTERVAL:-30s}
      timeout: ${ADMINER_HEALTH_TIMEOUT:-10s}
      retries: 3
    # Configurações de segurança e recursos
    security_opt:
      - no-new-privileges:true
    deploy:
      resources:
        limits:
          memory: ${ADMINER_MEMORY_LIMIT:-256M}
          cpus: '${ADMINER_CPU_LIMIT:-0.5}'
        reservations:
          memory: ${ADMINER_MEMORY_RESERVATION:-128M}
          cpus: '${ADMINER_CPU_RESERVATION:-0.25}'
    # Configurações de logging
    logging:
      driver: 'json-file'
      options:
        max-size: '${ADMINER_LOG_MAX_SIZE:-10m}'
        max-file: '${ADMINER_LOG_MAX_FILES:-3}'

  # Sync Diário - Executa sincronização automática
  daily-sync:
    build:
      context: .
      dockerfile: Dockerfile
    command: npm run sync:daily
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - SYNC_URL=http://app:3000/api/sync
      - SYNC_TIME=${SYNC_TIME:-0 2 * * *}
    depends_on:
      app:
        condition: service_healthy
    networks:
      - sienge-network
    # Configurações de recursos leves
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
        reservations:
          memory: 128M
          cpus: '0.1'
    # Configurações de logging
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '3'

volumes:
  postgres-data:
    driver: local

networks:
  sienge-network:
    driver: bridge
