services:
  # Banco de dados PostgreSQL - Produção
  db:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-sienge_data}
      POSTGRES_USER: ${POSTGRES_USER:-sienge_app}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST_AUTH_METHOD: md5
    ports:
      - '${DB_PORT_EXTERNAL:-5434}:5432'
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - sienge-network
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'pg_isready -U ${POSTGRES_USER:-sienge_app} -d ${POSTGRES_DB:-sienge_data}',
        ]
      interval: 30s
      timeout: 10s
      retries: 3
    # Configurações de segurança e recursos para produção
    security_opt:
      - no-new-privileges:true
    deploy:
      resources:
        limits:
          memory: ${DB_MEMORY_LIMIT:-2G}
          cpus: '${DB_CPU_LIMIT:-2.0}'
        reservations:
          memory: ${DB_MEMORY_RESERVATION:-1G}
          cpus: '${DB_CPU_RESERVATION:-1.0}'
    # Configurações de logging otimizadas para produção
    logging:
      driver: 'json-file'
      options:
        max-size: '50m'
        max-file: '5'

  # Aplicação Next.js - Produção
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        NODE_ENV: production
        BUILD_TARGET: production
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - POSTGRES_HOST=${POSTGRES_HOST:-db}
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - POSTGRES_USER=${POSTGRES_USER:-sienge_app}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB:-sienge_data}
      - NEXT_PUBLIC_PRIMARY_DOMAIN=${NEXT_PUBLIC_PRIMARY_DOMAIN}
      - NEXT_PUBLIC_APP_URL=${NEXT_PUBLIC_PRIMARY_DOMAIN}
      - SIENGE_SUBDOMAIN=${SIENGE_SUBDOMAIN}
      - SIENGE_USERNAME=${SIENGE_USERNAME}
      - SIENGE_PASSWORD=${SIENGE_PASSWORD}
      - SYNC_SCHEDULE=${SYNC_SCHEDULE:-0 2 * * *}
      - SYNC_BATCH_SIZE=${SYNC_BATCH_SIZE:-200}
      - SYNC_MAX_RETRIES=${SYNC_MAX_RETRIES:-3}
    ports:
      - '${APP_PORT_EXTERNAL:-3002}:3000'
    depends_on:
      db:
        condition: service_healthy
    networks:
      - sienge-network
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3000/api/health']
      interval: 30s
      timeout: 10s
      retries: 3
    # Configurações de segurança e recursos para produção
    security_opt:
      - no-new-privileges:true
    deploy:
      resources:
        limits:
          memory: ${APP_MEMORY_LIMIT:-4G}
          cpus: '${APP_CPU_LIMIT:-4.0}'
        reservations:
          memory: ${APP_MEMORY_RESERVATION:-2G}
          cpus: '${APP_CPU_RESERVATION:-2.0}'
    # Configurações de logging otimizadas para produção
    logging:
      driver: 'json-file'
      options:
        max-size: '50m'
        max-file: '5'

  # Adminer - Interface Web para Administração do Banco de Dados - Produção
  adminer:
    image: adminer:latest
    restart: unless-stopped
    ports:
      - '${ADMINER_PORT_EXTERNAL:-8080}:8080'
    networks:
      - sienge-network
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8080']
      interval: 30s
      timeout: 10s
      retries: 3
    # Configurações de segurança e recursos para produção
    security_opt:
      - no-new-privileges:true
    deploy:
      resources:
        limits:
          memory: ${ADMINER_MEMORY_LIMIT:-512M}
          cpus: '${ADMINER_CPU_LIMIT:-1.0}'
        reservations:
          memory: ${ADMINER_MEMORY_RESERVATION:-256M}
          cpus: '${ADMINER_CPU_RESERVATION:-0.5}'
    # Configurações de logging otimizadas para produção
    logging:
      driver: 'json-file'
      options:
        max-size: '20m'
        max-file: '3'

volumes:
  postgres-data:
    driver: local

networks:
  sienge-network:
    driver: bridge
