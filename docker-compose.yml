services:
  # Banco de dados PostgreSQL
  db:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-sienge_dev}
      POSTGRES_USER: ${POSTGRES_USER:-sienge_app}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-senha_forte}
    ports:
      - '${DB_PORT_EXTERNAL:-5432}:5432'
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - sienge-network
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER:-sienge_app} -d ${POSTGRES_DB:-sienge_dev}
      interval: 30s
      timeout: 10s
      retries: 3

  # Aplicação Next.js
  app:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      # Banco de dados
      DATABASE_URL: ${DATABASE_URL:-postgresql://${POSTGRES_USER:-sienge_app}:${POSTGRES_PASSWORD:-senha_forte}@${POSTGRES_HOST:-db}:${POSTGRES_PORT:-5432}/${POSTGRES_DB:-sienge_dev}?schema=public}
      POSTGRES_HOST: ${POSTGRES_HOST:-db}
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
      POSTGRES_USER: ${POSTGRES_USER:-sienge_app}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-senha_forte}
      POSTGRES_DB: ${POSTGRES_DB:-sienge_dev}
      
      # API Sienge
      SIENGE_SUBDOMAIN: ${SIENGE_SUBDOMAIN}
      SIENGE_USERNAME: ${SIENGE_USERNAME}
      SIENGE_PASSWORD: ${SIENGE_PASSWORD}
      
      # Aplicação
      NODE_ENV: ${NODE_ENV:-production}
      NEXT_PUBLIC_APP_URL: ${NEXT_PUBLIC_APP_URL:-http://localhost:3000}
      NEXTAUTH_URL: ${NEXTAUTH_URL:-http://localhost:3000}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      
      # Segurança
      ENCRYPTION_KEY: ${ENCRYPTION_KEY}
      JWT_SECRET: ${JWT_SECRET}
      
      # Sistema
      LOG_LEVEL: ${LOG_LEVEL:-info}
      SYNC_BATCH_SIZE: ${SYNC_BATCH_SIZE:-50}
      SYNC_MAX_RETRIES: ${SYNC_MAX_RETRIES:-3}
      RATE_LIMIT_CREDENTIALS_MAX: ${RATE_LIMIT_CREDENTIALS_MAX:-10}
      RATE_LIMIT_CREDENTIALS_WINDOW: ${RATE_LIMIT_CREDENTIALS_WINDOW:-300000}
      DATABASE_CONNECTION_LIMIT: ${DATABASE_CONNECTION_LIMIT:-10}
    ports:
      - '${APP_PORT_EXTERNAL:-3000}:3000'
    depends_on:
      db:
        condition: service_healthy
    networks:
      - sienge-network
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ['CMD', 'wget', '--no-verbose', '--tries=1', '--spider', 'http://localhost:3000/api/health']
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres-data:
    driver: local

networks:
  sienge-network:
    driver: bridge