generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ============================================
// TABELAS DO SISTEMA
// ============================================

model ApiCredentials {
  id              Int      @id @default(autoincrement())
  subdomain       String   @unique
  apiUser         String   @map("api_user")
  apiPasswordHash String   @map("api_password_hash")
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @updatedAt @map("updated_at")
  isActive        Boolean  @default(true) @map("is_active")

  @@index([subdomain])
  @@index([isActive])
  @@map("api_credentials")
}

model SyncLog {
  id               Int       @id @default(autoincrement())
  entityType       String
  syncStartedAt    DateTime  @default(now())
  syncCompletedAt  DateTime?
  recordsProcessed Int       @default(0)
  recordsInserted  Int       @default(0)
  recordsUpdated   Int       @default(0)
  recordsErrors    Int       @default(0)
  status           String
  errorMessage     String?
  apiCallsMade     Int       @default(0)

  @@index([entityType])
  @@index([status])
  @@index([syncStartedAt])
  @@index([entityType, status])
  @@map("sync_logs")
}

// ============================================
// TABELAS DE DADOS FUNCIONAIS
// ============================================

model Empresa {
  idEmpresa        Int      @id @map("idEmpresa")
  nomeEmpresa      String   @map("nomeEmpresa")
  cnpj             String?  @map("cnpj")
  inscricaoEstadual String? @map("inscricaoEstadual")
  inscricaoMunicipal String? @map("inscricaoMunicipal")
  endereco         String?  @map("endereco")
  cidade           String?  @map("cidade")
  estado           String?  @map("estado")
  cep              String?  @map("cep")
  telefone         String?  @map("telefone")
  email            String?  @map("email")
  site             String?  @map("site")
  ativo            Boolean  @default(true) @map("ativo")
  dataCadastro     DateTime @default(now()) @map("dataCadastro")
  dataAtualizacao  DateTime? @map("dataAtualizacao")

  // Relacionamentos
  clientes         Cliente[]

  @@index([nomeEmpresa])
  @@index([cnpj])
  @@index([ativo])
  @@index([dataCadastro])
  @@map("empresas")
}

model Cliente {
  idCliente                Int      @id @map("idCliente")
  nomeCompleto             String   @map("nomeCompleto")
  nomeSocial               String?  @map("nomeSocial")
  cpfCnpj                  String?  @map("cpfCnpj")
  rg                       String?  @map("rg")
  dataNascimento           DateTime? @map("dataNascimento")
  nacionalidade            String?  @map("nacionalidade")
  email                    String?  @map("email")
  ativo                    Boolean  @default(true) @map("ativo")
  dataCadastro             DateTime @default(now()) @map("dataCadastro")
  idEmpresa                Int?     @map("idEmpresa")
  estadoCivilStr            String?  @map("estadoCivilStr")
  profissaoStr              String?  @map("profissaoStr")
  foreigner                String?  @map("foreigner")
  sex                      String?  @map("sex")
  birthPlace               String?  @map("birthPlace")
  clientType               String?  @map("clientType")
  dataAtualizacao          DateTime? @map("dataAtualizacao")
  fatherName               String?  @map("fatherName")
  internationalId          String?  @map("internationalId")
  issueDateIdentityCard    DateTime? @map("issueDateIdentityCard")
  issuingBody              String?  @map("issuingBody")
  licenseIssueDate         DateTime? @map("licenseIssueDate")
  licenseIssuingBody       String?  @map("licenseIssuingBody")
  licenseNumber            String?  @map("licenseNumber")
  mailingAddress           String?  @map("mailingAddress")
  marriageDate             DateTime? @map("marriageDate")
  matrimonialRegime        String?  @map("matrimonialRegime")
  motherName               String?  @map("motherName")

  // Campos adicionais da API Sienge

  // Campos adicionais da API Sienge (pessoa jurídica)
  cityRegistrationNumber   String?  @map("cityRegistrationNumber")
  cnaeNumber              String?  @map("cnaeNumber")
  contactName             String?  @map("contactName")
  creaNumber              String?  @map("creaNumber")
  establishmentDate       DateTime? @map("establishmentDate")
  fantasyName             String?  @map("fantasyName")
  note                    String?  @map("note")
  site                    String?  @map("site")
  shareCapital            Decimal? @map("shareCapital")
  stateRegistrationNumber String?  @map("stateRegistrationNumber")
  technicalManager        String?  @map("technicalManager")

  // Campos gerais da API Sienge
  personType              String?  @map("personType")
  activityId              Int?     @map("activityId")
  activityDescription     String?  @map("activityDescription")

  // Campos derivados dos telefones
  telefonePrincipal       String?  @map("telefone_principal")
  telefonePrincipalTipo   String?  @map("telefone_principal_tipo")
  totalTelefones          Int?     @default(0) @map("total_telefones")

  // Campos derivados dos endereços
  enderecoPrincipal       String?  @map("endereco_principal")
  cidadePrincipal         String?  @map("cidade_principal")
  estadoPrincipal         String?  @map("estado_principal")
  cepPrincipal            String?  @map("cep_principal")
  totalEnderecos          Int?     @default(0) @map("total_enderecos")

  // Campos derivados do cônjuge
  temConjuge              Boolean? @default(false) @map("tem_conjuge")
  nomeConjuge             String?  @map("nome_conjuge")
  cpfConjuge              String?  @map("cpf_conjuge")

  // Campos JSON para telefones e endereços
  phones                  Json?    @map("phones")
  addresses               Json?    @map("addresses")

  // Novos campos JSON da API Sienge
  procurators             Json?    @map("procurators")
  contacts                Json?    @map("contacts")
  subTypes                Json?    @map("subTypes")
  spouse                  Json?    @map("spouse")
  familyIncome            Json?    @map("familyIncome")

  // Relacionamentos
  telefones               ClienteTelefone[]
  enderecos               ClienteEndereco[]
  procuradores            ClienteProcurador[]
  contatos                ClienteContato[]
  subtipos                ClienteSubtipo[]
  rendaFamiliar           ClienteRendaFamiliar[]

  // Relacionamentos
  empresa                  Empresa? @relation(fields: [idEmpresa], references: [idEmpresa])

  @@index([nomeCompleto])
  @@index([ativo])
  @@index([dataCadastro])
  @@index([idEmpresa])
  @@index([nomeCompleto, ativo])
  @@index([idEmpresa, ativo])
  @@index([dataAtualizacao])
  @@index([telefonePrincipal])
  @@index([cidadePrincipal])
  @@index([estadoPrincipal])
  @@index([temConjuge])
  @@map("clientes")
}

model ContratoVenda {
  id                    Int      @id @map("id")
  companyId             Int?     @map("companyId")
  internalCompanyId     Int?     @map("internalCompanyId")
  companyName           String?  @map("companyName")
  enterpriseId          Int?     @map("enterpriseId")
  internalEnterpriseId  Int?     @map("internalEnterpriseId")
  enterpriseName        String?  @map("enterpriseName")
  receivableBillId      Int?     @map("receivableBillId")
  cancellationPayableBillId Int? @map("cancellationPayableBillId")
  contractDate          DateTime? @map("contractDate")
  issueDate             DateTime? @map("issueDate")
  accountingDate        DateTime? @map("accountingDate")
  expectedDeliveryDate  DateTime? @map("expectedDeliveryDate")
  keysDeliveredAt       DateTime? @map("keysDeliveredAt")
  number                String?  @map("number")
  externalId            String?  @map("externalId")
  correctionType        String?  @map("correctionType")
  situation             String?  @map("situation")
  discountType          String?  @map("discountType")
  discountPercentage    Decimal? @map("discountPercentage")
  value                 Decimal? @map("value")
  totalSellingValue     Decimal? @map("totalSellingValue")
  cancellationDate      DateTime? @map("cancellationDate")
  totalCancellationAmount Decimal? @map("totalCancellationAmount")
  cancellationReason    String?  @map("cancellationReason")
  financialInstitutionNumber String? @map("financialInstitutionNumber")
  financialInstitutionDate DateTime? @map("financialInstitutionDate")
  proRataIndexer        Int?     @map("proRataIndexer")
  interestType          String?  @map("interestType")
  interestPercentage    Decimal? @map("interestPercentage")
  fineRate              Decimal? @map("fineRate")
  lateInterestCalculationType String? @map("lateInterestCalculationType")
  dailyLateInterestValue Decimal? @map("dailyLateInterestValue")
  containsRemadeInstallments Boolean? @map("containsRemadeInstallments")
  specialClause         String?  @map("specialClause")

  // Campos adicionais baseados na API (datas importantes do Sienge)
  dataCriacaoSienge           DateTime? @map("data_criacao_sienge")
  dataUltimaAtualizacaoSienge DateTime? @map("data_ultima_atualizacao_sienge")

  // Dados de clientes do contrato (JSON)
  salesContractCustomers Json?   @map("salesContractCustomers")

  // Campos derivados dos clientes (extraídos do JSON para facilitar análises)
  clientePrincipalNome        String? @map("cliente_principal_nome")
  clientePrincipalId          Int?    @map("cliente_principal_id")
  totalClientes              Int?    @map("total_clientes")
  clientePrincipalParticipacao Decimal? @map("cliente_principal_participacao")
  tipoContratoCliente        String? @map("tipo_contrato_cliente")

  // Dados de unidades do contrato (JSON)
  salesContractUnits     Json?   @map("salesContractUnits")

  // Dados de condições de pagamento (JSON)
  paymentConditions      Json?   @map("paymentConditions")

  // Campos derivados das condições de pagamento (extraídos do JSON para facilitar análises)
  valorTotalContrato         Decimal? @map("valor_total_contrato")
  valorTotalPago            Decimal? @map("valor_total_pago")
  saldoDevedorTotal         Decimal? @map("saldo_devedor_total")
  totalCondicoesPagamento   Int?     @map("total_condicoes_pagamento")
  totalParcelasContrato     Int?     @map("total_parcelas_contrato")
  parcelasPagasContrato     Int?     @map("parcelas_pagas_contrato")
  formaPagamentoPrincipal   String?  @map("forma_pagamento_principal")
  indexadorPrincipal        String?  @map("indexador_principal")
  temFinanciamento          Boolean? @map("tem_financiamento")
  percentualPago            Decimal? @map("percentual_pago")

  // Dados de corretores (JSON)
  brokers                Json?   @map("brokers")

  // Dados de comissões (JSON)
  linkedCommissions      Json?   @map("linkedCommissions")

  // Campos derivados das comissões (extraídos do JSON para facilitar análises)
  temComissao                      Boolean? @map("tem_comissao")
  idContratoComissao               Int?     @map("id_contrato_comissao")
  totalComissoes                   Int?     @map("total_comissoes")
  valorTotalComissao               Decimal? @map("valor_total_comissao")
  faixaValorComissao               String?  @map("faixa_valor_comissao")
  percentualComissaoSobreContrato  Decimal? @map("percentual_comissao_sobre_contrato")

  // Links para recursos relacionados (JSON)
  links                  Json?   @map("links")

  // Campos de controle
  dataCadastro           DateTime @default(now()) @map("dataCadastro")
  dataAtualizacao        DateTime? @map("dataAtualizacao")

  // Relacionamentos
  empreendimento         Empreendimento? @relation(fields: [enterpriseId], references: [id], onDelete: SetNull, onUpdate: Cascade)
  unidades               Unidade[]
  contratoClientes       ContratoCliente[]
  contratoUnidades       ContratoUnidade[]
  contratoCondicoesPagamento ContratoCondicaoPagamento[]

  @@index([number])
  @@index([situation])
  @@index([contractDate])
  @@index([issueDate])
  @@index([enterpriseId])
  @@index([companyId])
  @@index([externalId])
  @@index([situation, contractDate])
  @@index([enterpriseId, situation])
  @@map("contratos_venda")
}

model Empreendimento {
  id                        Int      @id @map("id")
  nome                      String   @map("nome")
  nomeComercial             String?  @map("nomeComercial")
  observacaoEmpreendimento  String?  @map("observacaoEmpreendimento")
  cnpj                      String?  @map("cnpj")
  tipo                      String?  @map("tipo")
  endereco                  String?  @map("endereco")
  dataCadastro              DateTime @default(now()) @map("dataCadastro")
  dataAtualizacao           DateTime? @map("dataAtualizacao")
  criadoPor                 String?  @map("criadoPor")
  modificadoPor             String?  @map("modificadoPor")
  idEmpresa                 Int?     @map("idEmpresa")
  nomeEmpresa               String?  @map("nomeEmpresa")
  idBaseCustos              Int?     @map("idBaseCustos")
  descricaoBaseCustos       String?  @map("descricaoBaseCustos")
  idTipoObra                Int?     @map("idTipoObra")
  descricaoTipoObra         String?  @map("descricaoTipoObra")

  // Relacionamentos
  unidades                  Unidade[]
  contratos                 ContratoVenda[]

  @@index([nome])
  @@index([tipo])
  @@index([idEmpresa])
  @@map("empreendimentos")
}

model Unidade {
  id                    Int      @id @map("id")
  idEmpreendimento      Int?     @map("idEmpreendimento")
  idContrato            Int?     @map("idContrato")
  idIndexador           Int?     @map("idIndexador")
  nome                  String   @map("nome")
  tipoImovel            String?  @map("tipoImovel")
  observacao            String?  @map("observacao")
  estoqueComercial      String?  @map("estoqueComercial")
  latitude              String?  @map("latitude")
  longitude             String?  @map("longitude")
  matricula             String?  @map("matricula")
  dataEntrega           DateTime? @map("dataEntrega")
  areaPrivativa         Decimal? @map("areaPrivativa")
  areaComum             Decimal? @map("areaComum")
  areaTerreno           Decimal? @map("areaTerreno")
  areaComumNaoProporcional Decimal? @map("areaComumNaoProporcional")
  fracaoIdeal           Decimal? @map("fracaoIdeal")
  fracaoIdealM2         Decimal? @map("fracaoIdealM2")
  fracaoVGV             Decimal? @map("fracaoVGV")
  quantidadeIndexada    Decimal? @map("quantidadeIndexada")
  adimplenciaPremiada   Decimal? @map("adimplenciaPremiada")
  valorTerreno          Decimal? @map("valorTerreno")
  pavimento             String?  @map("pavimento")
  numeroContrato        String?  @map("numeroContrato")
  areaUtil              Decimal? @map("areaUtil")
  valorIPTU             Decimal? @map("valorIPTU")
  inscricaoImobiliaria  String?  @map("inscricaoImobiliaria")
  dataCadastro          DateTime @default(now()) @map("dataCadastro")
  dataAtualizacao       DateTime? @map("dataAtualizacao")

  // Relacionamentos
  empreendimento        Empreendimento? @relation(fields: [idEmpreendimento], references: [id])
  contrato              ContratoVenda? @relation(fields: [idContrato], references: [id])

  @@index([nome])
  @@index([idEmpreendimento])
  @@index([idContrato])
  @@index([estoqueComercial])
  @@map("unidades")
}

model Webhook {
  id        String   @id @map("id")
  url       String   @map("url")
  token     String?  @map("token")
  events    Json     @map("events")
  createdAt DateTime @default(now()) @map("createdAt")
  updatedAt DateTime @updatedAt @map("updatedAt")

  @@index([url])
  @@map("webhooks")
}

model ContratoCliente {
  id                     Int      @id @default(autoincrement()) @map("id")
  contratoId             Int      @map("contrato_id")
  clienteSiengeId        Int      @map("cliente_sienge_id")
  nome                   String   @map("nome")
  isMain                 Boolean  @default(false) @map("is_main")
  isSpouse               Boolean  @default(false) @map("is_spouse")
  participacaoPercentual Decimal? @map("participacao_percentual")
  ordemNoContrato        Int      @default(1) @map("ordem_no_contrato")
  createdAt              DateTime @default(now()) @map("created_at")
  updatedAt              DateTime @default(now()) @map("updated_at")

  // Relacionamentos
  contrato               ContratoVenda @relation(fields: [contratoId], references: [id], onDelete: Cascade)

  @@unique([contratoId, clienteSiengeId, ordemNoContrato], name: "uk_contrato_cliente_ordem")
  @@index([contratoId])
  @@index([clienteSiengeId])
  @@index([isMain])
  @@index([nome])
  @@map("contrato_clientes")
}

model ContratoUnidade {
  id                     Int      @id @default(autoincrement()) @map("id")
  contratoId             Int      @map("contrato_id")
  unidadeSiengeId        Int      @map("unidade_sienge_id")
  nome                   String   @map("nome")
  isMain                 Boolean  @default(false) @map("is_main")
  participacaoPercentual Decimal? @map("participacao_percentual")
  tipoUnidade            String?  @map("tipo_unidade")
  createdAt              DateTime @default(now()) @map("created_at")
  updatedAt              DateTime @default(now()) @map("updated_at")

  // Relacionamentos
  contrato               ContratoVenda @relation(fields: [contratoId], references: [id], onDelete: Cascade)

  @@unique([contratoId, unidadeSiengeId], name: "uk_contrato_unidade")
  @@index([contratoId])
  @@index([unidadeSiengeId])
  @@index([isMain])
  @@index([nome])
  @@index([tipoUnidade])
  @@map("contrato_unidades")
}

model ContratoCondicaoPagamento {
  id                     Int      @id @default(autoincrement()) @map("id")
  contratoId             Int      @map("contrato_id")
  ordemCondicao          Int      @map("ordem_condicao")

  // Identificação da condição
  tipoCondicaoId         String?  @map("tipo_condicao_id")
  tipoCondicaoNome       String?  @map("tipo_condicao_nome")
  sequenceId             Int?     @map("sequence_id")
  orderNumber            Int?     @map("order_number")

  // Indexação
  indexadorId            Int?     @map("indexador_id")
  indexadorNome          String?  @map("indexador_nome")

  // Valores financeiros
  valorTotal             Decimal? @map("valor_total")
  valorPago              Decimal? @map("valor_pago")
  saldoDevedor           Decimal? @map("saldo_devedor")
  valorTotalJuros        Decimal? @map("valor_total_juros")

  // Parcelas
  numeroParcelas         Int?     @map("numero_parcelas")
  parcelasAbertas        Int?     @map("parcelas_abertas")

  // Datas
  dataPrimeiroPagamento  DateTime? @map("data_primeiro_pagamento")
  dataBase               DateTime? @map("data_base")
  dataBaseJuros          DateTime? @map("data_base_juros")

  // Juros e condições
  percentualJuros        Decimal? @map("percentual_juros")
  tipoJuros              String?  @map("tipo_juros")
  periodoCarenciaMeses   Int?     @map("periodo_carencia_meses")

  // Status
  status                 String?  @map("status")
  statusCondicao         String?  @map("status_condicao")
  pagoAntesAditivo       Boolean? @map("pago_antes_aditivo")

  // Portador
  portadorId             Int?     @map("portador_id")
  portadorNome           String?  @map("portador_nome")

  // Controle
  createdAt              DateTime @default(now()) @map("created_at")
  updatedAt              DateTime @default(now()) @map("updated_at")

  // Relacionamentos
  contrato               ContratoVenda @relation(fields: [contratoId], references: [id], onDelete: Cascade)

  @@unique([contratoId, ordemCondicao], name: "uk_contrato_condicao_ordem")
  @@index([contratoId])
  @@index([tipoCondicaoId])
  @@index([indexadorNome])
  @@index([statusCondicao])
  @@index([valorTotal])
  @@index([saldoDevedor])
  @@map("contrato_condicoes_pagamento")
}

// ============================================
// TABELAS AUXILIARES DE CLIENTES
// ============================================

model ClienteTelefone {
  id              Int      @id @default(autoincrement())
  clienteId       Int      @map("cliente_id")
  ordemTelefone   Int      @map("ordem_telefone")

  // Phone details
  tipo            String?  @map("tipo")
  numero          String?  @map("numero")
  codigoPais      String?  @map("codigo_pais")
  principal       Boolean? @default(false) @map("principal")
  observacao      String?  @map("observacao")

  // Control fields
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @default(now()) @map("updated_at")

  // Relacionamentos
  cliente         Cliente  @relation(fields: [clienteId], references: [idCliente], onDelete: Cascade)

  @@unique([clienteId, ordemTelefone], name: "uk_cliente_telefone_ordem")
  @@index([clienteId])
  @@index([principal])
  @@map("cliente_telefones")
}

model ClienteEndereco {
  id                      Int      @id @default(autoincrement())
  clienteId               Int      @map("cliente_id")
  ordemEndereco           Int      @map("ordem_endereco")

  // Address details
  tipo                    String?  @map("tipo")
  logradouro              String?  @map("logradouro")
  numero                  String?  @map("numero")
  complemento             String?  @map("complemento")
  bairro                  String?  @map("bairro")
  cidade                  String?  @map("cidade")
  estado                  String?  @map("estado")
  cep                     String?  @map("cep")
  codigoCidade            Int?     @map("codigo_cidade")
  enderecoCorrespondencia Boolean? @default(false) @map("endereco_correspondencia")

  // Control fields
  createdAt               DateTime @default(now()) @map("created_at")
  updatedAt               DateTime @default(now()) @map("updated_at")

  // Relacionamentos
  cliente                 Cliente  @relation(fields: [clienteId], references: [idCliente], onDelete: Cascade)

  @@unique([clienteId, ordemEndereco], name: "uk_cliente_endereco_ordem")
  @@index([clienteId])
  @@index([enderecoCorrespondencia])
  @@index([cidade])
  @@index([estado])
  @@map("cliente_enderecos")
}

model ClienteProcurador {
  id                Int      @id @default(autoincrement())
  clienteId         Int      @map("cliente_id")
  ordemProcurador   Int      @map("ordem_procurador")

  // Procurator details
  nome              String?  @map("nome")
  cpf               String?  @map("cpf")
  tipo              String?  @map("tipo")
  observacao        String?  @map("observacao")

  // Control fields
  createdAt         DateTime @default(now()) @map("created_at")
  updatedAt         DateTime @default(now()) @map("updated_at")

  // Relacionamentos
  cliente           Cliente  @relation(fields: [clienteId], references: [idCliente], onDelete: Cascade)

  @@unique([clienteId, ordemProcurador], name: "uk_cliente_procurador_ordem")
  @@index([clienteId])
  @@map("cliente_procuradores")
}

model ClienteContato {
  id            Int      @id @default(autoincrement())
  clienteId     Int      @map("cliente_id")
  ordemContato  Int      @map("ordem_contato")

  // Contact details
  nome          String?  @map("nome")
  telefone      String?  @map("telefone")
  email         String?  @map("email")
  tipo          String?  @map("tipo")
  observacao    String?  @map("observacao")

  // Control fields
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @default(now()) @map("updated_at")

  // Relacionamentos
  cliente       Cliente  @relation(fields: [clienteId], references: [idCliente], onDelete: Cascade)

  @@unique([clienteId, ordemContato], name: "uk_cliente_contato_ordem")
  @@index([clienteId])
  @@map("cliente_contatos")
}

model ClienteSubtipo {
  id            Int      @id @default(autoincrement())
  clienteId     Int      @map("cliente_id")
  ordemSubtipo  Int      @map("ordem_subtipo")

  // Subtype details
  subtipo       String?  @map("subtipo")
  descricao     String?  @map("descricao")

  // Control fields
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @default(now()) @map("updated_at")

  // Relacionamentos
  cliente       Cliente  @relation(fields: [clienteId], references: [idCliente], onDelete: Cascade)

  @@unique([clienteId, ordemSubtipo], name: "uk_cliente_subtipo_ordem")
  @@index([clienteId])
  @@map("cliente_subtipos")
}

model ClienteRendaFamiliar {
  id            Int      @id @default(autoincrement())
  clienteId     Int      @map("cliente_id")
  ordemRenda    Int      @map("ordem_renda")

  // Family income details
  nomeParente   String?  @map("nome_parente")
  parentesco    String?  @map("parentesco")
  valorRenda    Decimal? @map("valor_renda")
  observacao    String?  @map("observacao")

  // Control fields
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @default(now()) @map("updated_at")

  // Relacionamentos
  cliente       Cliente  @relation(fields: [clienteId], references: [idCliente], onDelete: Cascade)

  @@unique([clienteId, ordemRenda], name: "uk_cliente_renda_ordem")
  @@index([clienteId])
  @@map("cliente_renda_familiar")
}