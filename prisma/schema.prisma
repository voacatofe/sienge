generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ============================================
// TABELAS DO SISTEMA
// ============================================

model ApiCredentials {
  id              Int      @id @default(autoincrement())
  subdomain       String   @unique
  apiUser         String   @map("api_user")
  apiPasswordHash String   @map("api_password_hash")
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @updatedAt @map("updated_at")
  isActive        Boolean  @default(true) @map("is_active")

  @@index([subdomain])
  @@index([isActive])
  @@map("api_credentials")
}

model SyncLog {
  id               Int       @id @default(autoincrement())
  entityType       String
  syncStartedAt    DateTime  @default(now())
  syncCompletedAt  DateTime?
  recordsProcessed Int       @default(0)
  recordsInserted  Int       @default(0)
  recordsUpdated   Int       @default(0)
  recordsErrors    Int       @default(0)
  status           String
  errorMessage     String?
  apiCallsMade     Int       @default(0)

  @@index([entityType])
  @@index([status])
  @@index([syncStartedAt])
  @@index([entityType, status])
  @@map("sync_logs")
}

// ============================================
// TABELAS DE DADOS FUNCIONAIS
// ============================================

model Empresa {
  idEmpresa        Int      @id @map("idEmpresa")
  nomeEmpresa      String   @map("nomeEmpresa")
  cnpj             String?  @map("cnpj")
  inscricaoEstadual String? @map("inscricaoEstadual")
  inscricaoMunicipal String? @map("inscricaoMunicipal")
  endereco         String?  @map("endereco")
  cidade           String?  @map("cidade")
  estado           String?  @map("estado")
  cep              String?  @map("cep")
  telefone         String?  @map("telefone")
  email            String?  @map("email")
  site             String?  @map("site")
  ativo            Boolean  @default(true) @map("ativo")
  dataCadastro     DateTime @default(now()) @map("dataCadastro")
  dataAtualizacao  DateTime? @map("dataAtualizacao")

  // Relacionamentos
  clientes         Cliente[]
  titulosReceber   TituloReceber[]
  titulosPagar     TituloPagar[]

  @@index([nomeEmpresa])
  @@index([cnpj])
  @@index([ativo])
  @@index([dataCadastro])
  @@map("empresas")
}

model Cliente {
  idCliente                Int      @id @map("idCliente")
  nomeCompleto             String   @map("nomeCompleto")
  nomeSocial               String?  @map("nomeSocial")
  cpfCnpj                  String   @map("cpfCnpj")
  rg                       String?  @map("rg")
  dataNascimento           DateTime? @map("dataNascimento")
  nacionalidade            String?  @map("nacionalidade")
  email                    String?  @map("email")
  ativo                    Boolean  @default(true) @map("ativo")
  dataCadastro             DateTime @default(now()) @map("dataCadastro")
  idEmpresa                Int?     @map("idEmpresa")
  estadoCivilStr            String?  @map("estadoCivilStr")
  profissaoStr              String?  @map("profissaoStr")
  foreigner                String?  @map("foreigner")
  sex                      String?  @map("sex")
  birthPlace               String?  @map("birthPlace")
  clientType               String?  @map("clientType")
  dataAtualizacao          DateTime? @map("dataAtualizacao")
  fatherName               String?  @map("fatherName")
  internationalId          String?  @map("internationalId")
  issueDateIdentityCard    DateTime? @map("issueDateIdentityCard")
  issuingBody              String?  @map("issuingBody")
  licenseIssueDate         DateTime? @map("licenseIssueDate")
  licenseIssuingBody       String?  @map("licenseIssuingBody")
  licenseNumber            String?  @map("licenseNumber")
  mailingAddress           String?  @map("mailingAddress")
  marriageDate             DateTime? @map("marriageDate")
  matrimonialRegime        String?  @map("matrimonialRegime")
  motherName               String?  @map("motherName")

  // Campos adicionais da API Sienge

  // Campos adicionais da API Sienge (pessoa jur√≠dica)
  cityRegistrationNumber   String?  @map("cityRegistrationNumber")
  cnaeNumber              String?  @map("cnaeNumber")
  contactName             String?  @map("contactName")
  creaNumber              String?  @map("creaNumber")
  establishmentDate       DateTime? @map("establishmentDate")
  fantasyName             String?  @map("fantasyName")
  note                    String?  @map("note")
  site                    String?  @map("site")
  shareCapital            Decimal? @map("shareCapital")
  stateRegistrationNumber String?  @map("stateRegistrationNumber")
  technicalManager        String?  @map("technicalManager")
  
  // Campos gerais da API Sienge
  personType              String?  @map("personType")
  activityId              Int?     @map("activityId")
  activityDescription     String?  @map("activityDescription")

  // Relacionamentos
  empresa                  Empresa? @relation(fields: [idEmpresa], references: [idEmpresa])
  telefones                ClienteTelefone[]
  enderecos                ClienteEndereco[]
  titulosReceber           TituloReceber[]

  @@index([nomeCompleto])
  @@index([ativo])
  @@index([dataCadastro])
  @@index([idEmpresa])
  @@index([nomeCompleto, ativo])
  @@index([idEmpresa, ativo])
  @@index([dataAtualizacao])
  @@map("clientes")
}

model ClienteTelefone {
  idTelefone   Int     @id @default(autoincrement()) @map("idTelefone")
  numero       String  @map("numero")
  tipo         String? @map("tipo")
  observacao   String? @map("observacao")
  idCliente    Int     @map("idCliente")
  idd          String? @map("idd")
  main         Boolean @default(false) @map("main")

  // Relacionamentos
  cliente      Cliente @relation(fields: [idCliente], references: [idCliente])

  @@index([idCliente])
  @@index([main])
  @@map("cliente_telefones")
}

model ClienteEndereco {
  idEndereco     Int     @id @default(autoincrement()) @map("idEndereco")
  logradouro     String? @map("logradouro")
  numero         String? @map("numero")
  complemento    String? @map("complemento")
  bairro         String? @map("bairro")
  cidade         String? @map("cidade")
  estado         String? @map("estado")
  cep            String? @map("cep")
  tipo           String? @map("tipo")
  idCliente      Int     @map("idCliente")
  idMunicipio    Int?    @map("idMunicipio")
  mail           Boolean @default(false) @map("mail")

  // Relacionamentos
  cliente        Cliente @relation(fields: [idCliente], references: [idCliente])

  @@index([idCliente])
  @@index([mail])
  @@index([idMunicipio])
  @@map("cliente_enderecos")
}

model Indexador {
  idIndexador    Int     @id @map("idIndexador")
  nomeIndexador  String  @map("nomeIndexador")
  tipoIndexador  String? @map("tipoIndexador")
  valorAtual     Decimal? @map("valorAtual")
  dataAtualizacao DateTime? @map("dataAtualizacao")
  ativo          Boolean @default(true) @map("ativo")

  // Relacionamentos
  titulosReceber TituloReceber[]
  titulosPagar   TituloPagar[]

  @@index([nomeIndexador])
  @@index([ativo])
  @@map("indexadores")
}

model PlanoFinanceiro {
  idPlanoFinanceiro Int     @id @map("idPlanoFinanceiro")
  nomePlano         String  @map("nomePlano")
  tipoPlano         String? @map("tipoPlano")
  codigoPlano       String? @map("codigoPlano")
  ativo             Boolean @default(true) @map("ativo")

  // Relacionamentos
  titulosReceber    TituloReceber[]
  titulosPagar      TituloPagar[]

  @@index([nomePlano])
  @@index([ativo])
  @@map("planos_financeiros")
}

model PortadorRecebimento {
  idPortador        Int     @id @map("idPortador")
  nomePortador      String  @map("nomePortador")
  tipoPortador      String? @map("tipoPortador")
  codigoPortador    String? @map("codigoPortador")
  ativo             Boolean @default(true) @map("ativo")

  // Relacionamentos
  titulosReceber    TituloReceber[]

  @@index([nomePortador])
  @@index([ativo])
  @@map("portadores_recebimento")
}

model TituloReceber {
  idTituloReceber     Int      @id @map("idTituloReceber")
  idContrato          Int?     @map("idContrato")
  idCliente           Int      @map("idCliente")
  idEmpresa           Int?     @map("idEmpresa")
  numeroDocumento     String   @map("numeroDocumento")
  idDocumentoIdent    String?  @map("idDocumentoIdent")
  dataEmissao         DateTime @map("dataEmissao")
  dataVencimento      DateTime @map("dataVencimento")
  valorOriginal       Decimal  @map("valorOriginal")
  valorAtualizado     Decimal? @map("valorAtualizado")
  idIndexador         Int?     @map("idIndexador")
  juros               Decimal? @map("juros")
  multa               Decimal? @map("multa")
  descontoConcedido   Decimal? @map("descontoConcedido")
  valorPago           Decimal? @map("valorPago")
  dataPagamento       DateTime? @map("dataPagamento")
  status              String   @map("status")
  observacoes         String?  @map("observacoes")
  idPortador          Int?     @map("idPortador")
  idPlanoFinanceiro   Int?     @map("idPlanoFinanceiro")

  // Relacionamentos
  cliente             Cliente @relation(fields: [idCliente], references: [idCliente])
  empresa             Empresa? @relation(fields: [idEmpresa], references: [idEmpresa])
  indexador           Indexador? @relation(fields: [idIndexador], references: [idIndexador])
  portador            PortadorRecebimento? @relation(fields: [idPortador], references: [idPortador])
  planoFinanceiro     PlanoFinanceiro? @relation(fields: [idPlanoFinanceiro], references: [idPlanoFinanceiro])

  @@index([numeroDocumento])
  @@index([status])
  @@index([dataVencimento])
  @@index([valorOriginal])
  @@index([idCliente])
  @@index([idContrato])
  @@index([idPortador])
  @@index([status, dataVencimento])
  @@index([idCliente, status])
  @@map("titulos_receber")
}

model TituloPagar {
  idTituloPagar         Int      @id @map("idTituloPagar")
  idCredor              Int      @map("idCredor")
  idEmpresaDevedora     Int?     @map("idEmpresaDevedora")
  numeroDocumento       String   @map("numeroDocumento")
  idDocumentoIdent      String?  @map("idDocumentoIdent")
  dataEmissao           DateTime @map("dataEmissao")
  dataVencimento        DateTime @map("dataVencimento")
  valorOriginal         Decimal  @map("valorOriginal")
  valorAtualizado       Decimal? @map("valorAtualizado")
  idIndexador           Int?     @map("idIndexador")
  idPlanoFinanceiro     Int?     @map("idPlanoFinanceiro")
  observacao            String?  @map("observacao")
  descontoObtido        Decimal? @map("descontoObtido")
  valorPago             Decimal? @map("valorPago")
  dataPagamento         DateTime? @map("dataPagamento")
  status                String   @map("status")
  idContratoSuprimento  Int?     @map("idContratoSuprimento")

  // Relacionamentos
  empresaDevedora       Empresa? @relation(fields: [idEmpresaDevedora], references: [idEmpresa])
  indexador             Indexador? @relation(fields: [idIndexador], references: [idIndexador])
  planoFinanceiro       PlanoFinanceiro? @relation(fields: [idPlanoFinanceiro], references: [idPlanoFinanceiro])

  @@index([numeroDocumento])
  @@index([status])
  @@index([dataVencimento])
  @@index([valorOriginal])
  @@index([idCredor])
  @@index([idEmpresaDevedora])
  @@index([idContratoSuprimento])
  @@map("titulos_pagar")
}

model ContratoVenda {
  id                    Int      @id @map("id")
  companyId             Int?     @map("companyId")
  internalCompanyId     Int?     @map("internalCompanyId")
  companyName           String?  @map("companyName")
  enterpriseId          Int?     @map("enterpriseId")
  internalEnterpriseId  Int?     @map("internalEnterpriseId")
  enterpriseName        String?  @map("enterpriseName")
  receivableBillId      Int?     @map("receivableBillId")
  cancellationPayableBillId Int? @map("cancellationPayableBillId")
  contractDate          DateTime? @map("contractDate")
  issueDate             DateTime? @map("issueDate")
  accountingDate        DateTime? @map("accountingDate")
  expectedDeliveryDate  DateTime? @map("expectedDeliveryDate")
  keysDeliveredAt       DateTime? @map("keysDeliveredAt")
  number                String?  @map("number")
  externalId            String?  @map("externalId")
  correctionType        String?  @map("correctionType")
  situation             String?  @map("situation")
  discountType          String?  @map("discountType")
  discountPercentage    Decimal? @map("discountPercentage")
  value                 Decimal? @map("value")
  totalSellingValue     Decimal? @map("totalSellingValue")
  cancellationDate      DateTime? @map("cancellationDate")
  totalCancellationAmount Decimal? @map("totalCancellationAmount")
  cancellationReason    String?  @map("cancellationReason")
  financialInstitutionNumber String? @map("financialInstitutionNumber")
  financialInstitutionDate DateTime? @map("financialInstitutionDate")
  proRataIndexer        Int?     @map("proRataIndexer")
  interestType          String?  @map("interestType")
  interestPercentage    Decimal? @map("interestPercentage")
  fineRate              Decimal? @map("fineRate")
  lateInterestCalculationType String? @map("lateInterestCalculationType")
  dailyLateInterestValue Decimal? @map("dailyLateInterestValue")
  containsRemadeInstallments Boolean? @map("containsRemadeInstallments")
  specialClause         String?  @map("specialClause")
  
  // Dados de clientes do contrato (JSON)
  salesContractCustomers Json?   @map("salesContractCustomers")
  
  // Dados de unidades do contrato (JSON)
  salesContractUnits     Json?   @map("salesContractUnits")
  
  // Dados de condi√ß√µes de pagamento (JSON)
  paymentConditions      Json?   @map("paymentConditions")
  
  // Dados de corretores (JSON)
  brokers                Json?   @map("brokers")
  
  // Dados de comiss√µes (JSON)
  linkedCommissions      Json?   @map("linkedCommissions")
  
  // Links para recursos relacionados (JSON)
  links                  Json?   @map("links")
  
  // Campos de controle
  dataCadastro           DateTime @default(now()) @map("dataCadastro")
  dataAtualizacao        DateTime? @map("dataAtualizacao")

  @@index([number])
  @@index([situation])
  @@index([contractDate])
  @@index([issueDate])
  @@index([enterpriseId])
  @@index([companyId])
  @@index([externalId])
  @@index([situation, contractDate])
  @@index([enterpriseId, situation])
  @@map("contratos_venda")
}