generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ============================================
// TABELAS DO SISTEMA
// ============================================

model ApiCredentials {
  id              Int      @id @default(autoincrement())
  subdomain       String   @unique
  apiUser         String   @map("api_user")
  apiPasswordHash String   @map("api_password_hash")
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @updatedAt @map("updated_at")
  isActive        Boolean  @default(true) @map("is_active")

  @@index([subdomain])
  @@index([isActive])
  @@map("api_credentials")
}

model SyncLog {
  id               Int       @id @default(autoincrement())
  entityType       String
  syncStartedAt    DateTime  @default(now())
  syncCompletedAt  DateTime?
  recordsProcessed Int       @default(0)
  recordsInserted  Int       @default(0)
  recordsUpdated   Int       @default(0)
  recordsErrors    Int       @default(0)
  status           String
  errorMessage     String?
  apiCallsMade     Int       @default(0)

  @@index([entityType])
  @@index([status])
  @@index([syncStartedAt])
  @@index([entityType, status])
  @@map("sync_logs")
}

// ============================================
// TABELAS DE DADOS FUNCIONAIS
// ============================================

model Empresa {
  idEmpresa        Int      @id @map("idEmpresa")
  nomeEmpresa      String   @map("nomeEmpresa")
  cnpj             String?  @map("cnpj")
  inscricaoEstadual String? @map("inscricaoEstadual")
  inscricaoMunicipal String? @map("inscricaoMunicipal")
  endereco         String?  @map("endereco")
  cidade           String?  @map("cidade")
  estado           String?  @map("estado")
  cep              String?  @map("cep")
  telefone         String?  @map("telefone")
  email            String?  @map("email")
  site             String?  @map("site")
  ativo            Boolean  @default(true) @map("ativo")
  dataCadastro     DateTime @default(now()) @map("dataCadastro")
  dataAtualizacao  DateTime? @map("dataAtualizacao")

  // Relacionamentos
  clientes         Cliente[]
  titulosReceber   TituloReceber[]
  titulosPagar     TituloPagar[]

  @@index([nomeEmpresa])
  @@index([cnpj])
  @@index([ativo])
  @@index([dataCadastro])
  @@map("empresas")
}

model Cliente {
  idCliente                Int      @id @map("idCliente")
  nomeCompleto             String   @map("nomeCompleto")
  nomeSocial               String?  @map("nomeSocial")
  cpfCnpj                  String   @map("cpfCnpj")
  rg                       String?  @map("rg")
  dataNascimento           DateTime? @map("dataNascimento")
  nacionalidade            String?  @map("nacionalidade")
  email                    String?  @map("email")
  ativo                    Boolean  @default(true) @map("ativo")
  dataCadastro             DateTime @default(now()) @map("dataCadastro")
  idEmpresa                Int?     @map("idEmpresa")
  estadoCivilStr            String?  @map("estadoCivilStr")
  profissaoStr              String?  @map("profissaoStr")
  foreigner                String?  @map("foreigner")
  sex                      String?  @map("sex")
  birthPlace               String?  @map("birthPlace")
  clientType               String?  @map("clientType")
  dataAtualizacao          DateTime? @map("dataAtualizacao")
  fatherName               String?  @map("fatherName")
  internationalId          String?  @map("internationalId")
  issueDateIdentityCard    DateTime? @map("issueDateIdentityCard")
  issuingBody              String?  @map("issuingBody")
  licenseIssueDate         DateTime? @map("licenseIssueDate")
  licenseIssuingBody       String?  @map("licenseIssuingBody")
  licenseNumber            String?  @map("licenseNumber")
  mailingAddress           String?  @map("mailingAddress")
  marriageDate             DateTime? @map("marriageDate")
  matrimonialRegime        String?  @map("matrimonialRegime")
  motherName               String?  @map("motherName")

  // Campos adicionais da API Sienge

  // Campos adicionais da API Sienge (pessoa jur√≠dica)
  cityRegistrationNumber   String?  @map("cityRegistrationNumber")
  cnaeNumber              String?  @map("cnaeNumber")
  contactName             String?  @map("contactName")
  creaNumber              String?  @map("creaNumber")
  establishmentDate       DateTime? @map("establishmentDate")
  fantasyName             String?  @map("fantasyName")
  note                    String?  @map("note")
  site                    String?  @map("site")
  shareCapital            Decimal? @map("shareCapital")
  stateRegistrationNumber String?  @map("stateRegistrationNumber")
  technicalManager        String?  @map("technicalManager")
  
  // Campos gerais da API Sienge
  personType              String?  @map("personType")
  activityId              Int?     @map("activityId")
  activityDescription     String?  @map("activityDescription")

  // Relacionamentos
  empresa                  Empresa? @relation(fields: [idEmpresa], references: [idEmpresa])
  telefones                ClienteTelefone[]
  enderecos                ClienteEndereco[]
  titulosReceber           TituloReceber[]

  @@index([nomeCompleto])
  @@index([ativo])
  @@index([dataCadastro])
  @@index([idEmpresa])
  @@index([nomeCompleto, ativo])
  @@index([idEmpresa, ativo])
  @@index([dataAtualizacao])
  @@map("clientes")
}

model ClienteTelefone {
  idTelefone   Int     @id @default(autoincrement()) @map("idTelefone")
  numero       String  @map("numero")
  tipo         String? @map("tipo")
  observacao   String? @map("observacao")
  idCliente    Int     @map("idCliente")
  idd          String? @map("idd")
  main         Boolean @default(false) @map("main")

  // Relacionamentos
  cliente      Cliente @relation(fields: [idCliente], references: [idCliente])

  @@index([idCliente])
  @@index([main])
  @@map("cliente_telefones")
}

model ClienteEndereco {
  idEndereco     Int     @id @default(autoincrement()) @map("idEndereco")
  logradouro     String? @map("logradouro")
  numero         String? @map("numero")
  complemento    String? @map("complemento")
  bairro         String? @map("bairro")
  cidade         String? @map("cidade")
  estado         String? @map("estado")
  cep            String? @map("cep")
  tipo           String? @map("tipo")
  idCliente      Int     @map("idCliente")
  idMunicipio    Int?    @map("idMunicipio")
  mail           Boolean @default(false) @map("mail")

  // Relacionamentos
  cliente        Cliente @relation(fields: [idCliente], references: [idCliente])

  @@index([idCliente])
  @@index([mail])
  @@index([idMunicipio])
  @@map("cliente_enderecos")
}

model Indexador {
  idIndexador    Int     @id @map("idIndexador")
  nomeIndexador  String  @map("nomeIndexador")
  tipoIndexador  String? @map("tipoIndexador")
  valorAtual     Decimal? @map("valorAtual")
  dataAtualizacao DateTime? @map("dataAtualizacao")
  ativo          Boolean @default(true) @map("ativo")

  // Relacionamentos
  titulosReceber TituloReceber[]
  titulosPagar   TituloPagar[]

  @@index([nomeIndexador])
  @@index([ativo])
  @@map("indexadores")
}

model PlanoFinanceiro {
  idPlanoFinanceiro Int     @id @map("idPlanoFinanceiro")
  nomePlano         String  @map("nomePlano")
  tipoPlano         String? @map("tipoPlano")
  codigoPlano       String? @map("codigoPlano")
  ativo             Boolean @default(true) @map("ativo")

  // Relacionamentos
  titulosReceber    TituloReceber[]
  titulosPagar      TituloPagar[]

  @@index([nomePlano])
  @@index([ativo])
  @@map("planos_financeiros")
}

model PortadorRecebimento {
  idPortador        Int     @id @map("idPortador")
  nome              String  @map("nome")
  descricao         String? @map("descricao")
  codigo            String? @map("codigo")
  tipo              String? @map("tipo")
  ativo             Boolean @default(true) @map("ativo")

  // Relacionamentos
  titulosReceber    TituloReceber[]

  @@index([nome])
  @@index([codigo])
  @@index([ativo])
  @@map("portadores_recebimento")
}

model TituloReceber {
  idTituloReceber     Int      @id @default(autoincrement()) @map("idTituloReceber")
  idContrato          Int?     @map("idContrato")
  idCliente           Int      @map("idCliente")
  idEmpresa           Int?     @map("idEmpresa")
  numeroDocumento     String   @map("numeroDocumento")
  idDocumentoIdent    String?  @map("idDocumentoIdent")
  dataEmissao         DateTime @map("dataEmissao")
  dataVencimento      DateTime @map("dataVencimento")
  valorOriginal       Decimal  @map("valorOriginal")
  valorAtualizado     Decimal? @map("valorAtualizado")
  idIndexador         Int?     @map("idIndexador")
  juros               Decimal? @map("juros")
  multa               Decimal? @map("multa")
  descontoConcedido   Decimal? @map("descontoConcedido")
  valorPago           Decimal? @map("valorPago")
  dataPagamento       DateTime? @map("dataPagamento")
  status              String   @map("status")
  observacoes         String?  @map("observacoes")
  idPortador          Int?     @map("idPortador")
  idPlanoFinanceiro   Int?     @map("idPlanoFinanceiro")
  
  // Campos adicionais da API Sienge
  receivableBillId    Int?     @map("receivableBillId")
  documentId          String?  @map("documentId")
  documentNumber      String?  @map("documentNumber")
  receivableBillValue Decimal? @map("receivableBillValue")
  companyId           Int?     @map("companyId")
  defaulting          Boolean  @default(false) @map("defaulting")
  subjudice           Boolean  @default(false) @map("subjudice")
  payOffDate          DateTime? @map("payOffDate")
  normal              Boolean  @default(true) @map("normal")
  inBilling           Boolean  @default(false) @map("inBilling")

  // Relacionamentos
  cliente             Cliente @relation(fields: [idCliente], references: [idCliente])
  empresa             Empresa? @relation(fields: [idEmpresa], references: [idEmpresa])
  indexador           Indexador? @relation(fields: [idIndexador], references: [idIndexador])
  portador            PortadorRecebimento? @relation(fields: [idPortador], references: [idPortador])
  planoFinanceiro     PlanoFinanceiro? @relation(fields: [idPlanoFinanceiro], references: [idPlanoFinanceiro])

  @@index([numeroDocumento])
  @@index([status])
  @@index([dataVencimento])
  @@index([valorOriginal])
  @@index([idCliente])
  @@index([idContrato])
  @@index([idPortador])
  @@index([receivableBillId])
  @@index([documentId])
  @@index([companyId])
  @@index([defaulting])
  @@index([status, dataVencimento])
  @@index([idCliente, status])
  @@index([receivableBillId, status])
  @@index([companyId, status])
  @@map("titulos_receber")
}

model TituloPagar {
  idTituloPagar         Int      @id @map("idTituloPagar")
  idCredor              Int      @map("idCredor")
  idEmpresaDevedora     Int?     @map("idEmpresaDevedora")
  numeroDocumento       String   @map("numeroDocumento")
  idDocumentoIdent      String?  @map("idDocumentoIdent")
  dataEmissao           DateTime @map("dataEmissao")
  dataVencimento        DateTime @map("dataVencimento")
  valorOriginal         Decimal  @map("valorOriginal")
  valorAtualizado       Decimal? @map("valorAtualizado")
  idIndexador           Int?     @map("idIndexador")
  idPlanoFinanceiro     Int?     @map("idPlanoFinanceiro")
  observacao            String?  @map("observacao")
  descontoObtido        Decimal? @map("descontoObtido")
  valorPago             Decimal? @map("valorPago")
  dataPagamento         DateTime? @map("dataPagamento")
  status                String   @map("status")
  idContratoSuprimento  Int?     @map("idContratoSuprimento")

  // Relacionamentos
  empresaDevedora       Empresa? @relation(fields: [idEmpresaDevedora], references: [idEmpresa])
  indexador             Indexador? @relation(fields: [idIndexador], references: [idIndexador])
  planoFinanceiro       PlanoFinanceiro? @relation(fields: [idPlanoFinanceiro], references: [idPlanoFinanceiro])

  @@index([numeroDocumento])
  @@index([status])
  @@index([dataVencimento])
  @@index([valorOriginal])
  @@index([idCredor])
  @@index([idEmpresaDevedora])
  @@index([idContratoSuprimento])
  @@map("titulos_pagar")
}

model ContratoVenda {
  id                    Int      @id @map("id")
  companyId             Int?     @map("companyId")
  internalCompanyId     Int?     @map("internalCompanyId")
  companyName           String?  @map("companyName")
  enterpriseId          Int?     @map("enterpriseId")
  internalEnterpriseId  Int?     @map("internalEnterpriseId")
  enterpriseName        String?  @map("enterpriseName")
  receivableBillId      Int?     @map("receivableBillId")
  cancellationPayableBillId Int? @map("cancellationPayableBillId")
  contractDate          DateTime? @map("contractDate")
  issueDate             DateTime? @map("issueDate")
  accountingDate        DateTime? @map("accountingDate")
  expectedDeliveryDate  DateTime? @map("expectedDeliveryDate")
  keysDeliveredAt       DateTime? @map("keysDeliveredAt")
  number                String?  @map("number")
  externalId            String?  @map("externalId")
  correctionType        String?  @map("correctionType")
  situation             String?  @map("situation")
  discountType          String?  @map("discountType")
  discountPercentage    Decimal? @map("discountPercentage")
  value                 Decimal? @map("value")
  totalSellingValue     Decimal? @map("totalSellingValue")
  cancellationDate      DateTime? @map("cancellationDate")
  totalCancellationAmount Decimal? @map("totalCancellationAmount")
  cancellationReason    String?  @map("cancellationReason")
  financialInstitutionNumber String? @map("financialInstitutionNumber")
  financialInstitutionDate DateTime? @map("financialInstitutionDate")
  proRataIndexer        Int?     @map("proRataIndexer")
  interestType          String?  @map("interestType")
  interestPercentage    Decimal? @map("interestPercentage")
  fineRate              Decimal? @map("fineRate")
  lateInterestCalculationType String? @map("lateInterestCalculationType")
  dailyLateInterestValue Decimal? @map("dailyLateInterestValue")
  containsRemadeInstallments Boolean? @map("containsRemadeInstallments")
  specialClause         String?  @map("specialClause")
  
  // Campos adicionais baseados na API
  installmentPlan       String?  @map("installmentPlan")
  paymentMethod         String?  @map("paymentMethod")
  contractStatus        String?  @map("contractStatus")
  totalInstallments     Int?     @map("totalInstallments")
  paidInstallments      Int?     @map("paidInstallments")
  remainingBalance      Decimal? @map("remainingBalance")
  lastPaymentDate       DateTime? @map("lastPaymentDate")
  nextPaymentDate       DateTime? @map("nextPaymentDate")
  contractType          String?  @map("contractType")
  salesRepresentative   String?  @map("salesRepresentative")
  observations          String?  @map("observations")
  
  // Dados de clientes do contrato (JSON)
  salesContractCustomers Json?   @map("salesContractCustomers")
  
  // Dados de unidades do contrato (JSON)
  salesContractUnits     Json?   @map("salesContractUnits")
  
  // Dados de condi√ß√µes de pagamento (JSON)
  paymentConditions      Json?   @map("paymentConditions")
  
  // Dados de corretores (JSON)
  brokers                Json?   @map("brokers")
  
  // Dados de comiss√µes (JSON)
  linkedCommissions      Json?   @map("linkedCommissions")
  
  // Links para recursos relacionados (JSON)
  links                  Json?   @map("links")
  
  // Campos de controle
  dataCadastro           DateTime @default(now()) @map("dataCadastro")
  dataAtualizacao        DateTime? @map("dataAtualizacao")

  // Relacionamentos
  empreendimento         Empreendimento? @relation(fields: [enterpriseId], references: [id])
  unidades               Unidade[]

  @@index([number])
  @@index([situation])
  @@index([contractDate])
  @@index([issueDate])
  @@index([enterpriseId])
  @@index([companyId])
  @@index([externalId])
  @@index([situation, contractDate])
  @@index([enterpriseId, situation])
  @@map("contratos_venda")
}

model Empreendimento {
  id                        Int      @id @map("id")
  nome                      String   @map("nome")
  nomeComercial             String?  @map("nomeComercial")
  observacaoEmpreendimento  String?  @map("observacaoEmpreendimento")
  cnpj                      String?  @map("cnpj")
  tipo                      String?  @map("tipo")
  endereco                  String?  @map("endereco")
  cidade                    String?  @map("cidade")
  estado                    String?  @map("estado")
  cep                       String?  @map("cep")
  telefone                  String?  @map("telefone")
  email                     String?  @map("email")
  site                      String?  @map("site")
  ativo                     Boolean  @default(true) @map("ativo")
  dataCadastro              DateTime @default(now()) @map("dataCadastro")
  dataAtualizacao           DateTime? @map("dataAtualizacao")
  
  // Campos adicionais da API
  companyId                 Int?     @map("companyId")
  internalCompanyId         Int?     @map("internalCompanyId")
  companyName               String?  @map("companyName")
  buildingCostEstimationStatus String? @map("buildingCostEstimationStatus")
  buildingStatus            String?  @map("buildingStatus")
  receivableRegister        String?  @map("receivableRegister")
  enabledForIntegration     Boolean  @default(false) @map("enabledForIntegration")
  
  // Detalhes do endere√ßo (JSON)
  addressDetails            Json?    @map("addressDetails")
  
  // Relacionamentos
  unidades                  Unidade[]
  contratos                 ContratoVenda[]
  
  @@index([nome])
  @@index([tipo])
  @@index([ativo])
  @@index([companyId])
  @@index([buildingStatus])
  @@index([nome, ativo])
  @@map("empreendimentos")
}

model Site {
  id          Int      @id @map("id")
  descricao   String   @map("descricao")
  buildingId  String?  @map("buildingId")
  ativo       Boolean  @default(true) @map("ativo")
  dataCadastro DateTime @default(now()) @map("dataCadastro")
  dataAtualizacao DateTime? @map("dataAtualizacao")
  
  @@index([descricao])
  @@index([buildingId])
  @@index([ativo])
  @@map("sites")
}

model Unidade {
  id                    Int      @id @map("id")
  enterpriseId          Int      @map("enterpriseId")
  contractId            Int?     @map("contractId")
  indexerId             Int?     @map("indexerId")
  nome                  String   @map("nome")
  tipoImovel            String?  @map("tipoImovel")
  observacao            String?  @map("observacao")
  estoqueComercial      String?  @map("estoqueComercial")
  ativo                 Boolean  @default(true) @map("ativo")
  dataCadastro          DateTime @default(now()) @map("dataCadastro")
  dataAtualizacao       DateTime? @map("dataAtualizacao")
  
  // Campos adicionais da API
  propertyType          String?  @map("propertyType")
  commercialStock       String?  @map("commercialStock")
  note                  String?  @map("note")
  classificationUnit    Int?     @map("classificationUnit")
  propertyTypeId        Int?     @map("propertyTypeId")
  situationId           Int?     @map("situationId")
  condominiumValue      Decimal? @map("condominiumValue")
  privateArea           Decimal? @map("privateArea")
  totalArea             Decimal? @map("totalArea")
  builtArea             Decimal? @map("builtArea")
  usefulArea            Decimal? @map("usefulArea")
  garageSpaces          Int?     @map("garageSpaces")
  bedrooms              Int?     @map("bedrooms")
  suites                Int?     @map("suites")
  bathrooms             Int?     @map("bathrooms")
  livingRooms           Int?     @map("livingRooms")
  diningRooms           Int?     @map("diningRooms")
  kitchens              Int?     @map("kitchens")
  serviceArea           Int?     @map("serviceArea")
  laundry               Int?     @map("laundry")
  balcony               Int?     @map("balcony")
  homeOffice            Int?     @map("homeOffice")
  closet                Int?     @map("closet")
  pantry                Int?     @map("pantry")
  garden                Int?     @map("garden")
  terrace               Int?     @map("terrace")
  roof                  Int?     @map("roof")
  basement              Int?     @map("basement")
  groundFloor           Int?     @map("groundFloor")
  mezzanine             Int?     @map("mezzanine")
  roofGarden            Int?     @map("roofGarden")
  socialRoom            Int?     @map("socialRoom")
  gym                   Int?     @map("gym")
  partyRoom             Int?     @map("partyRoom")
  playground            Int?     @map("playground")
  barbecueArea          Int?     @map("barbecueArea")
  swimmingPool          Int?     @map("swimmingPool")
  sauna                 Int?     @map("sauna")
  steamRoom             Int?     @map("steamRoom")
  jacuzzi               Int?     @map("jacuzzi")
  elevator              Int?     @map("elevator")
  concierge             Int?     @map("concierge")
  security              Int?     @map("security")
  camera                Int?     @map("camera")
  intercom              Int?     @map("intercom")
  generator             Int?     @map("generator")
  airConditioning       Int?     @map("airConditioning")
  heating               Int?     @map("heating")
  fireplace             Int?     @map("fireplace")
  solarHeating          Int?     @map("solarHeating")
  solarPanel            Int?     @map("solarPanel")
  waterTank             Int?     @map("waterTank")
  gasTank               Int?     @map("gasTank")
  waterHeater           Int?     @map("waterHeater")
  waterSoftener         Int?     @map("waterSoftener")
  waterFilter           Int?     @map("waterFilter")
  waterPump             Int?     @map("waterPump")
  waterTreatment        Int?     @map("waterTreatment")
  sewageTreatment       Int?     @map("sewageTreatment")
  rainwaterHarvesting   Int?     @map("rainwaterHarvesting")
  grayWaterReuse        Int?     @map("grayWaterReuse")
  energyEfficiency      Int?     @map("energyEfficiency")
  sustainability        Int?     @map("sustainability")
  accessibility         Int?     @map("accessibility")
  petFriendly           Int?     @map("petFriendly")
  furnished             Int?     @map("furnished")
  semiFurnished         Int?     @map("semiFurnished")
  unfurnished           Int?     @map("unfurnished")
  readyToLive           Int?     @map("readyToLive")
  underConstruction     Int?     @map("underConstruction")
  planned               Int?     @map("planned")
  availableForSale      Int?     @map("availableForSale")
  availableForRent      Int?     @map("availableForRent")
  sold                  Int?     @map("sold")
  rented                Int?     @map("rented")
  reserved              Int?     @map("reserved")
  technicalReserve      Int?     @map("technicalReserve")
  exchange              Int?     @map("exchange")
  mutual                Int?     @map("mutual")
  proposal              Int?     @map("proposal")
  transferred           Int?     @map("transferred")
  soldToThirdParties    Int?     @map("soldToThirdParties")
  soldInPreContract     Int?     @map("soldInPreContract")
  
  // Dados adicionais (JSON)
  additionalData         Json?    @map("additionalData")
  childUnits             Json?    @map("childUnits")
  groupings              Json?    @map("groupings")
  specialValues          Json?    @map("specialValues")
  links                  Json?    @map("links")
  
  // Relacionamentos
  empreendimento         Empreendimento @relation(fields: [enterpriseId], references: [id])
  contrato               ContratoVenda? @relation(fields: [contractId], references: [id])
  
  @@index([nome])
  @@index([enterpriseId])
  @@index([contractId])
  @@index([estoqueComercial])
  @@index([commercialStock])
  @@index([ativo])
  @@index([enterpriseId, ativo])
  @@index([estoqueComercial, ativo])
  @@map("unidades")
}

model ContasReceber {
  id                    Int      @id @default(autoincrement()) @map("id")
  customerId            Int      @map("customerId")
  receivableBillId      Int      @unique @map("receivableBillId")
  documentId            String?  @map("documentId")
  documentNumber        String?  @map("documentNumber")
  issueDate             DateTime @map("issueDate")
  receivableBillValue   Decimal  @map("receivableBillValue")
  companyId             Int?     @map("companyId")
  defaulting            Boolean  @default(false) @map("defaulting")
  subjudice             Boolean  @default(false) @map("subjudice")
  normal                Boolean  @default(true) @map("normal")
  inBilling             Boolean  @default(false) @map("inBilling")
  note                  String?  @map("note")
  payOffDate            DateTime? @map("payOffDate")
  createdAt             DateTime @default(now()) @map("createdAt")
  updatedAt             DateTime @updatedAt @map("updatedAt")

  // Relacionamentos
  cliente               Cliente @relation(fields: [customerId], references: [idCliente])
  empresa               Empresa? @relation(fields: [companyId], references: [idEmpresa])
  parcelas              ParcelaContasReceber[]

  @@index([customerId])
  @@index([receivableBillId])
  @@index([companyId])
  @@index([issueDate])
  @@index([defaulting])
  @@map("contas_receber")
}

model ParcelaContasReceber {
  id                Int      @id @default(autoincrement()) @map("id")
  receivableBillId  Int      @map("receivableBillId")
  installmentId     Int      @map("installmentId")
  carrierId         Int?     @map("carrierId")
  conditionTypeId   String?  @map("conditionTypeId")
  dueDate           DateTime @map("dueDate")
  balanceDue        Decimal  @map("balanceDue")
  generatedTicket   Boolean  @default(false) @map("generatedTicket")
  createdAt         DateTime @default(now()) @map("createdAt")
  updatedAt         DateTime @updatedAt @map("updatedAt")

  // Relacionamentos
  contaReceber      ContasReceber @relation(fields: [receivableBillId], references: [receivableBillId])

  @@index([receivableBillId])
  @@index([installmentId])
  @@index([dueDate])
  @@map("parcelas_contas_receber")
}

model MovimentoBancario {
  id                            Int      @id @default(autoincrement()) @map("id")
  bankMovementId                Int      @unique @map("bankMovementId")
  billId                        Int?     @map("billId")
  installmentId                 Int?     @map("installmentId")
  bankMovementAmount            Decimal  @map("bankMovementAmount")
  documentIdentificationId      String?  @map("documentIdentificationId")
  documentIdentificationName    String?  @map("documentIdentificationName")
  documentIdentificationNumber  String?  @map("documentIdentificationNumber")
  bankMovementOriginId          String?  @map("bankMovementOriginId")
  bankMovementHistoricId        String?  @map("bankMovementHistoricId")
  bankMovementHistoricName      String?  @map("bankMovementHistoricName")
  bankMovementOperationId       Int?     @map("bankMovementOperationId")
  bankMovementOperationName     String?  @map("bankMovementOperationName")
  bankMovementOperationType     String?  @map("bankMovementOperationType")
  bankMovementReconcile         String?  @map("bankMovementReconcile")
  bankMovementDate              DateTime @map("bankMovementDate")
  billDate                      DateTime? @map("billDate")
  accountNumber                 String?  @map("accountNumber")
  companyId                     Int?     @map("companyId")
  companyName                   String?  @map("companyName")
  groupCompanyId                Int?     @map("groupCompanyId")
  groupCompanyName              String?  @map("groupCompanyName")
  holdingId                     Int?     @map("holdingId")
  holdingName                   String?  @map("holdingName")
  subsidiaryId                  Int?     @map("subsidiaryId")
  subsidiaryName                String?  @map("subsidiaryName")
  creditorId                    Int?     @map("creditorId")
  creditorName                  String?  @map("creditorName")
  clientId                      Int?     @map("clientId")
  clientName                    String?  @map("clientName")
  createdAt                     DateTime @default(now()) @map("createdAt")
  updatedAt                     DateTime @updatedAt @map("updatedAt")

  // Dados JSON para apropria√ß√µes
  financialCategories           Json?    @map("financialCategories")
  departamentCosts             Json?    @map("departamentCosts")
  buildingCosts                Json?    @map("buildingCosts")

  @@index([bankMovementId])
  @@index([bankMovementDate])
  @@index([companyId])
  @@index([clientId])
  @@index([billDate])
  @@map("movimentos_bancarios")
}

model DiarioObra {
  id                    Int      @id @default(autoincrement()) @map("id")
  constructionDailyId   Int      @unique @map("constructionDailyId")
  buildingId            Int      @map("buildingId")
  date                  DateTime @map("date")
  responsibleId         String   @map("responsibleId")
  rainfallIndex         Decimal? @map("rainfallIndex")
  weekDay               String?  @map("weekDay")
  notes                 String?  @map("notes")
  createdBy             String?  @map("createdBy")
  createdAt             DateTime @default(now()) @map("createdAt")
  modifiedBy            String?  @map("modifiedBy")
  modifiedAt            DateTime? @map("modifiedAt")

  // Dados JSON para turnos, tarefas, ocorr√™ncias, equipes e equipamentos
  shifts                Json?    @map("shifts")
  plannedTasks          Json?    @map("plannedTasks")
  detachedTasks         Json?    @map("detachedTasks")
  events                Json?    @map("events")
  crews                 Json?    @map("crews")
  equipments            Json?    @map("equipments")
  attachments           Json?    @map("attachments")

  @@index([buildingId])
  @@index([date])
  @@index([constructionDailyId])
  @@map("diarios_obra")
}

model TipoOcorrencia {
  id          Int     @id @map("id")
  description String  @map("description")
  isActive    Boolean @default(true) @map("isActive")

  @@index([isActive])
  @@map("tipos_ocorrencia")
}

model TipoDiarioObra {
  id          Int     @id @map("id")
  description String  @map("description")
  isActive    Boolean @default(true) @map("isActive")
  type        String  @map("type") // Event, Crew, Equipment

  @@index([isActive])
  @@index([type])
  @@map("tipos_diario_obra")
}

model AtivoFixo {
  id                            Int      @id @map("patrimonyId")
  detail                        String?  @map("detail")
  observation                   String?  @map("observation")
  costCenter                    Int?     @map("costCenter")
  situation                     String?  @map("situation")
  preservation                  String?  @map("preservation")
  propertyRegistration          String?  @map("propertyRegistration")
  landRegistration              String?  @map("landRegistration")
  previousOswner                String?  @map("previousOswner")
  privateArea                   Decimal? @map("privateArea")
  commonArea                    Decimal? @map("commonArea")
  address                       String?  @map("address")
  addressNumber                 String?  @map("addressNumber")
  addressComplement             String?  @map("addressComplement")
  neighborhood                  String?  @map("neighborhood")
  city                          String?  @map("city")
  postalCode                    String?  @map("postalCode")
  incorporationForm             String?  @map("incorporationForm")
  incorporationDate             DateTime? @map("incorporationDate")
  incorporationValue            Decimal? @map("incorporationValue")
  accountancyIncorporationAccount String? @map("accountancyIncorporationAccount")
  accountancyIdentity           String?  @map("accountancyIdentity")
  accountancyOrigin             String?  @map("accountancyOrigin")
  accountancyUsageIndicator     String?  @map("accountancyUsageIndicator")
  depreciationInitialDate       DateTime? @map("depreciationInitialDate")
  depreciationDebitAccount      String?  @map("depreciationDebitAccount")
  depreciationCreditAccount     String?  @map("depreciationCreditAccount")
  depreciationValue             Int?     @map("depreciationValue")
  depreciationLastDate          DateTime? @map("depreciationLastDate")
  depreciationActualValue       Decimal? @map("depreciationActualValue")
  createdAt                     DateTime @default(now()) @map("createdAt")
  updatedAt                     DateTime @updatedAt @map("updatedAt")

  @@index([costCenter])
  @@index([situation])
  @@index([incorporationDate])
  @@map("ativos_fixos")
}

model Webhook {
  id        String   @id @map("id")
  url       String   @map("url")
  token     String?  @map("token")
  events    Json     @map("events")
  createdAt DateTime @default(now()) @map("createdAt")
  updatedAt DateTime @updatedAt @map("updatedAt")

  @@index([url])
  @@map("webhooks")
}

model MedicaoContrato {
  id                          Int      @id @default(autoincrement()) @map("id")
  documentId                  String   @map("documentId")
  contractNumber              String   @map("contractNumber")
  buildingId                  Int      @map("buildingId")
  measurementNumber           Int      @map("measurementNumber")
  authorized                  Boolean  @default(false) @map("authorized")
  statusApproval              String   @map("statusApproval")
  notes                       String?  @map("notes")
  responsibleId               String?  @map("responsibleId")
  responsibleName             String?  @map("responsibleName")
  consistent                  Boolean  @default(false) @map("consistent")
  measurementDate             DateTime @map("measurementDate")
  dueDate                     DateTime? @map("dueDate")
  materialCost                Decimal? @map("materialCost")
  laborCost                   Decimal? @map("laborCost")
  measuredTotal               Decimal? @map("measuredTotal")
  indexesPriceChange          Decimal? @map("indexesPriceChange")
  directBillingValue          Decimal? @map("directBillingValue")
  subtotal                    Decimal? @map("subtotal")
  securityDepositValue        Decimal? @map("securityDepositValue")
  exchangeValue               Decimal? @map("exchangeValue")
  earnestMoneyValue           Decimal? @map("earnestMoneyValue")
  discountsValue              Decimal? @map("discountsValue")
  taxValue                    Decimal? @map("taxValue")
  netValue                    Decimal? @map("netValue")
  contractSupplierId          Int?     @map("contractSupplierId")
  contractCustomerId          Int?     @map("contractCustomerId")
  released                    Boolean  @default(false) @map("released")
  finalized                   Boolean  @default(false) @map("finalized")
  createdAt                   DateTime @default(now()) @map("createdAt")
  updatedAt                   DateTime @updatedAt @map("updatedAt")

  // Dados JSON para apropria√ß√µes
  buildingAppropriations      Json?    @map("buildingAppropriations")

  @@index([documentId, contractNumber, buildingId, measurementNumber])
  @@index([measurementDate])
  @@index([contractSupplierId])
  @@index([contractCustomerId])
  @@map("medicoes_contrato")
}

model AnexoMedicaoContrato {
  id                Int      @id @default(autoincrement()) @map("id")
  documentId        String   @map("documentId")
  buildingId        Int      @map("buildingId")
  contractNumber    String   @map("contractNumber")
  measurementNumber Int      @map("measurementNumber")
  attachmentNumber  Int      @map("attachmentNumber")
  name              String   @map("name")
  description       String?  @map("description")
  createdAt         DateTime @default(now()) @map("createdAt")
  updatedAt         DateTime @updatedAt @map("updatedAt")

  @@index([documentId, contractNumber, buildingId, measurementNumber])
  @@index([attachmentNumber])
  @@map("anexos_medicao_contrato")
}

model ExtratoConta {
  id                   Int      @id @default(autoincrement()) @map("id")
  value                Decimal  @map("value")
  date                 DateTime @map("date")
  documentNumber       String?  @map("documentNumber")
  description          String?  @map("description")
  documentId           String?  @map("documentId")
  type                 String   @map("type") // Income ou Expense
  reconciliationDate   DateTime? @map("reconciliationDate")
  billId               Int?     @map("billId")
  installmentNumber    Int?     @map("installmentNumber")
  statementOrigin      String?  @map("statementOrigin")
  statementType        String?  @map("statementType")
  statementTypeNotes   String?  @map("statementTypeNotes")
  createdAt            DateTime @default(now()) @map("createdAt")
  updatedAt            DateTime @updatedAt @map("updatedAt")

  // Dados JSON para apropria√ß√µes financeiras
  budgetCategories     Json?    @map("budgetCategories")
  links                Json?    @map("links")

  @@index([date])
  @@index([type])
  @@index([billId])
  @@index([reconciliationDate])
  @@map("extratos_conta")
}