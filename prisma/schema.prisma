generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ============================================
// TABELAS DO SISTEMA
// ============================================

model ApiCredentials {
  id              Int      @id @default(autoincrement())
  subdomain       String   @unique
  apiUser         String   @map("api_user")
  apiPasswordHash String   @map("api_password_hash")
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @updatedAt @map("updated_at")
  isActive        Boolean  @default(true) @map("is_active")

  @@index([subdomain])
  @@index([isActive])
  @@map("api_credentials")
}

model SyncLog {
  id               Int       @id @default(autoincrement())
  entityType       String
  syncStartedAt    DateTime  @default(now())
  syncCompletedAt  DateTime?
  recordsProcessed Int       @default(0)
  recordsInserted  Int       @default(0)
  recordsUpdated   Int       @default(0)
  recordsErrors    Int       @default(0)
  status           String
  errorMessage     String?
  apiCallsMade     Int       @default(0)

  @@index([entityType])
  @@index([status])
  @@index([syncStartedAt])
  @@index([entityType, status])
  @@map("sync_logs")
}

// ============================================
// TABELAS DE DADOS FUNCIONAIS
// ============================================

model Empresa {
  idEmpresa        Int      @id @map("idEmpresa")
  nomeEmpresa      String   @map("nomeEmpresa")
  cnpj             String?  @map("cnpj")
  inscricaoEstadual String? @map("inscricaoEstadual")
  inscricaoMunicipal String? @map("inscricaoMunicipal")
  endereco         String?  @map("endereco")
  cidade           String?  @map("cidade")
  estado           String?  @map("estado")
  cep              String?  @map("cep")
  telefone         String?  @map("telefone")
  email            String?  @map("email")
  site             String?  @map("site")
  ativo            Boolean  @default(true) @map("ativo")
  dataCadastro     DateTime @default(now()) @map("dataCadastro")
  dataAtualizacao  DateTime? @map("dataAtualizacao")

  // Relacionamentos
  clientes         Cliente[]

  @@index([nomeEmpresa])
  @@index([cnpj])
  @@index([ativo])
  @@index([dataCadastro])
  @@map("empresas")
}

model Cliente {
  idCliente                Int      @id @map("idCliente")
  nomeCompleto             String   @map("nomeCompleto")
  nomeSocial               String?  @map("nomeSocial")
  cpfCnpj                  String?  @map("cpfCnpj")
  rg                       String?  @map("rg")
  dataNascimento           DateTime? @map("dataNascimento")
  nacionalidade            String?  @map("nacionalidade")
  email                    String?  @map("email")
  ativo                    Boolean  @default(true) @map("ativo")
  dataCadastro             DateTime @default(now()) @map("dataCadastro")
  idEmpresa                Int?     @map("idEmpresa")
  estadoCivilStr            String?  @map("estadoCivilStr")
  profissaoStr              String?  @map("profissaoStr")
  foreigner                String?  @map("foreigner")
  sex                      String?  @map("sex")
  birthPlace               String?  @map("birthPlace")
  clientType               String?  @map("clientType")
  dataAtualizacao          DateTime? @map("dataAtualizacao")
  fatherName               String?  @map("fatherName")
  internationalId          String?  @map("internationalId")
  issueDateIdentityCard    DateTime? @map("issueDateIdentityCard")
  issuingBody              String?  @map("issuingBody")
  licenseIssueDate         DateTime? @map("licenseIssueDate")
  licenseIssuingBody       String?  @map("licenseIssuingBody")
  licenseNumber            String?  @map("licenseNumber")
  mailingAddress           String?  @map("mailingAddress")
  marriageDate             DateTime? @map("marriageDate")
  matrimonialRegime        String?  @map("matrimonialRegime")
  motherName               String?  @map("motherName")

  // Campos adicionais da API Sienge

  // Campos adicionais da API Sienge (pessoa jurídica)
  cityRegistrationNumber   String?  @map("cityRegistrationNumber")
  cnaeNumber              String?  @map("cnaeNumber")
  contactName             String?  @map("contactName")
  creaNumber              String?  @map("creaNumber")
  establishmentDate       DateTime? @map("establishmentDate")
  fantasyName             String?  @map("fantasyName")
  note                    String?  @map("note")
  site                    String?  @map("site")
  shareCapital            Decimal? @map("shareCapital")
  stateRegistrationNumber String?  @map("stateRegistrationNumber")
  technicalManager        String?  @map("technicalManager")

  // Campos gerais da API Sienge
  personType              String?  @map("personType")
  activityId              Int?     @map("activityId")
  activityDescription     String?  @map("activityDescription")

  // Campos JSON para telefones e endereços
  phones                  Json?    @map("phones")
  addresses               Json?    @map("addresses")

  // Relacionamentos
  empresa                  Empresa? @relation(fields: [idEmpresa], references: [idEmpresa])

  @@index([nomeCompleto])
  @@index([ativo])
  @@index([dataCadastro])
  @@index([idEmpresa])
  @@index([nomeCompleto, ativo])
  @@index([idEmpresa, ativo])
  @@index([dataAtualizacao])
  @@map("clientes")
}

model ContratoVenda {
  id                    Int      @id @map("id")
  companyId             Int?     @map("companyId")
  internalCompanyId     Int?     @map("internalCompanyId")
  companyName           String?  @map("companyName")
  enterpriseId          Int?     @map("enterpriseId")
  internalEnterpriseId  Int?     @map("internalEnterpriseId")
  enterpriseName        String?  @map("enterpriseName")
  receivableBillId      Int?     @map("receivableBillId")
  cancellationPayableBillId Int? @map("cancellationPayableBillId")
  contractDate          DateTime? @map("contractDate")
  issueDate             DateTime? @map("issueDate")
  accountingDate        DateTime? @map("accountingDate")
  expectedDeliveryDate  DateTime? @map("expectedDeliveryDate")
  keysDeliveredAt       DateTime? @map("keysDeliveredAt")
  number                String?  @map("number")
  externalId            String?  @map("externalId")
  correctionType        String?  @map("correctionType")
  situation             String?  @map("situation")
  discountType          String?  @map("discountType")
  discountPercentage    Decimal? @map("discountPercentage")
  value                 Decimal? @map("value")
  totalSellingValue     Decimal? @map("totalSellingValue")
  cancellationDate      DateTime? @map("cancellationDate")
  totalCancellationAmount Decimal? @map("totalCancellationAmount")
  cancellationReason    String?  @map("cancellationReason")
  financialInstitutionNumber String? @map("financialInstitutionNumber")
  financialInstitutionDate DateTime? @map("financialInstitutionDate")
  proRataIndexer        Int?     @map("proRataIndexer")
  interestType          String?  @map("interestType")
  interestPercentage    Decimal? @map("interestPercentage")
  fineRate              Decimal? @map("fineRate")
  lateInterestCalculationType String? @map("lateInterestCalculationType")
  dailyLateInterestValue Decimal? @map("dailyLateInterestValue")
  containsRemadeInstallments Boolean? @map("containsRemadeInstallments")
  specialClause         String?  @map("specialClause")

  // Campos adicionais baseados na API
  installmentPlan       String?  @map("installmentPlan")
  paymentMethod         String?  @map("paymentMethod")
  contractStatus        String?  @map("contractStatus")
  totalInstallments     Int?     @map("totalInstallments")
  paidInstallments      Int?     @map("paidInstallments")
  remainingBalance      Decimal? @map("remainingBalance")
  lastPaymentDate       DateTime? @map("lastPaymentDate")
  nextPaymentDate       DateTime? @map("nextPaymentDate")
  contractType          String?  @map("contractType")
  salesRepresentative   String?  @map("salesRepresentative")
  observations          String?  @map("observations")

  // Dados de clientes do contrato (JSON)
  salesContractCustomers Json?   @map("salesContractCustomers")

  // Dados de unidades do contrato (JSON)
  salesContractUnits     Json?   @map("salesContractUnits")

  // Dados de condições de pagamento (JSON)
  paymentConditions      Json?   @map("paymentConditions")

  // Dados de corretores (JSON)
  brokers                Json?   @map("brokers")

  // Dados de comissões (JSON)
  linkedCommissions      Json?   @map("linkedCommissions")

  // Links para recursos relacionados (JSON)
  links                  Json?   @map("links")

  // Campos de controle
  dataCadastro           DateTime @default(now()) @map("dataCadastro")
  dataAtualizacao        DateTime? @map("dataAtualizacao")

  // Relacionamentos
  empreendimento         Empreendimento? @relation(fields: [enterpriseId], references: [id], onDelete: SetNull, onUpdate: Cascade)
  unidades               Unidade[]

  @@index([number])
  @@index([situation])
  @@index([contractDate])
  @@index([issueDate])
  @@index([enterpriseId])
  @@index([companyId])
  @@index([externalId])
  @@index([situation, contractDate])
  @@index([enterpriseId, situation])
  @@map("contratos_venda")
}

model Empreendimento {
  id                        Int      @id @map("id")
  nome                      String   @map("nome")
  nomeComercial             String?  @map("nomeComercial")
  observacaoEmpreendimento  String?  @map("observacaoEmpreendimento")
  cnpj                      String?  @map("cnpj")
  tipo                      String?  @map("tipo")
  endereco                  String?  @map("endereco")
  dataCadastro              DateTime @default(now()) @map("dataCadastro")
  dataAtualizacao           DateTime? @map("dataAtualizacao")
  criadoPor                 String?  @map("criadoPor")
  modificadoPor             String?  @map("modificadoPor")
  idEmpresa                 Int?     @map("idEmpresa")
  nomeEmpresa               String?  @map("nomeEmpresa")
  idBaseCustos              Int?     @map("idBaseCustos")
  descricaoBaseCustos       String?  @map("descricaoBaseCustos")
  idTipoObra                Int?     @map("idTipoObra")
  descricaoTipoObra         String?  @map("descricaoTipoObra")

  // Relacionamentos
  unidades                  Unidade[]
  contratos                 ContratoVenda[]

  @@index([nome])
  @@index([tipo])
  @@index([idEmpresa])
  @@map("empreendimentos")
}

model Unidade {
  id                    Int      @id @map("id")
  idEmpreendimento      Int?     @map("idEmpreendimento")
  idContrato            Int?     @map("idContrato")
  idIndexador           Int?     @map("idIndexador")
  nome                  String   @map("nome")
  tipoImovel            String?  @map("tipoImovel")
  observacao            String?  @map("observacao")
  estoqueComercial      String?  @map("estoqueComercial")
  latitude              String?  @map("latitude")
  longitude             String?  @map("longitude")
  matricula             String?  @map("matricula")
  dataEntrega           DateTime? @map("dataEntrega")
  areaPrivativa         Decimal? @map("areaPrivativa")
  areaComum             Decimal? @map("areaComum")
  areaTerreno           Decimal? @map("areaTerreno")
  areaComumNaoProporcional Decimal? @map("areaComumNaoProporcional")
  fracaoIdeal           Decimal? @map("fracaoIdeal")
  fracaoIdealM2         Decimal? @map("fracaoIdealM2")
  fracaoVGV             Decimal? @map("fracaoVGV")
  quantidadeIndexada    Decimal? @map("quantidadeIndexada")
  adimplenciaPremiada   Decimal? @map("adimplenciaPremiada")
  valorTerreno          Decimal? @map("valorTerreno")
  pavimento             String?  @map("pavimento")
  numeroContrato        String?  @map("numeroContrato")
  areaUtil              Decimal? @map("areaUtil")
  valorIPTU             Decimal? @map("valorIPTU")
  inscricaoImobiliaria  String?  @map("inscricaoImobiliaria")
  dataCadastro          DateTime @default(now()) @map("dataCadastro")
  dataAtualizacao       DateTime? @map("dataAtualizacao")

  // Relacionamentos
  empreendimento        Empreendimento? @relation(fields: [idEmpreendimento], references: [id])
  contrato              ContratoVenda? @relation(fields: [idContrato], references: [id])

  @@index([nome])
  @@index([idEmpreendimento])
  @@index([idContrato])
  @@index([estoqueComercial])
  @@map("unidades")
}

model Webhook {
  id        String   @id @map("id")
  url       String   @map("url")
  token     String?  @map("token")
  events    Json     @map("events")
  createdAt DateTime @default(now()) @map("createdAt")
  updatedAt DateTime @updatedAt @map("updatedAt")

  @@index([url])
  @@map("webhooks")
}