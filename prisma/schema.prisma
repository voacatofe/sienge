generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ============================================
// TABELAS DO SISTEMA
// ============================================

model ApiCredentials {
  id              Int      @id @default(autoincrement())
  subdomain       String   @unique
  apiUser         String   @map("api_user")
  apiPasswordHash String   @map("api_password_hash")

  // Campos para criptografia AES-256 reversível
  apiPasswordEncrypted String? @map("api_password_encrypted")
  encryptionIv         String? @map("encryption_iv")
  encryptionTag        String? @map("encryption_tag")
  encryptionSalt       String? @map("encryption_salt")

  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @updatedAt @map("updated_at")
  isActive        Boolean  @default(true) @map("is_active")

  @@index([subdomain])
  @@index([isActive])
  @@index([subdomain, apiPasswordEncrypted], name: "idx_api_credentials_subdomain_encrypted")
  @@map("api_credentials")
}

model SyncLog {
  id               Int       @id @default(autoincrement())
  entityType       String
  syncStartedAt    DateTime  @default(now())
  syncCompletedAt  DateTime?
  recordsProcessed Int       @default(0)
  recordsInserted  Int       @default(0)
  recordsUpdated   Int       @default(0)
  recordsErrors    Int       @default(0)
  status           String
  errorMessage     String?
  apiCallsMade     Int       @default(0)

  @@index([entityType])
  @@index([status])
  @@index([syncStartedAt])
  @@index([entityType, status])
  @@map("sync_logs")
}

// ============================================
// TABELAS DE DADOS FUNCIONAIS
// ============================================

model Empresa {
  idEmpresa        Int      @id @map("idEmpresa")
  nomeEmpresa      String   @map("nomeEmpresa")
  cnpj             String?  @map("cnpj")
  inscricaoEstadual String? @map("inscricaoEstadual")
  inscricaoMunicipal String? @map("inscricaoMunicipal")
  endereco         String?  @map("endereco")
  cidade           String?  @map("cidade")
  estado           String?  @map("estado")
  cep              String?  @map("cep")
  telefone         String?  @map("telefone")
  email            String?  @map("email")
  site             String?  @map("site")
  ativo            Boolean  @default(true) @map("ativo")
  dataCadastro     DateTime @default(now()) @map("dataCadastro")
  dataAtualizacao  DateTime? @map("dataAtualizacao")

  // Relacionamentos
  clientes         Cliente[]
  titulosPagar     TituloPagar[]
  contratosSuprimento ContratoSuprimento[]
  centrosCusto     CentroCusto[]
  extratosContas   ExtratoContas[]

  @@index([nomeEmpresa])
  @@index([cnpj])
  @@index([ativo])
  @@index([dataCadastro])
  @@map("empresas")
}

model Cliente {
  idCliente                Int      @id @map("idCliente")
  nomeCompleto             String   @map("nomeCompleto")
  nomeSocial               String?  @map("nomeSocial")
  cpfCnpj                  String?  @map("cpfCnpj")
  rg                       String?  @map("rg")
  dataNascimento           DateTime? @map("dataNascimento")
  nacionalidade            String?  @map("nacionalidade")
  email                    String?  @map("email")
  ativo                    Boolean  @default(true) @map("ativo")
  dataCadastro             DateTime @default(now()) @map("dataCadastro")
  idEmpresa                Int?     @map("idEmpresa")
  estadoCivilStr            String?  @map("estadoCivilStr")
  profissaoStr              String?  @map("profissaoStr")
  foreigner                String?  @map("foreigner")
  sex                      String?  @map("sex")
  birthPlace               String?  @map("birthPlace")
  clientType               String?  @map("clientType")
  dataAtualizacao          DateTime? @map("dataAtualizacao")
  fatherName               String?  @map("fatherName")
  internationalId          String?  @map("internationalId")
  issueDateIdentityCard    DateTime? @map("issueDateIdentityCard")
  issuingBody              String?  @map("issuingBody")
  licenseIssueDate         DateTime? @map("licenseIssueDate")
  licenseIssuingBody       String?  @map("licenseIssuingBody")
  licenseNumber            String?  @map("licenseNumber")
  mailingAddress           String?  @map("mailingAddress")
  marriageDate             DateTime? @map("marriageDate")
  matrimonialRegime        String?  @map("matrimonialRegime")
  motherName               String?  @map("motherName")

  // Campos adicionais da API Sienge

  // Campos adicionais da API Sienge (pessoa jurídica)
  cityRegistrationNumber   String?  @map("cityRegistrationNumber")
  cnaeNumber              String?  @map("cnaeNumber")
  contactName             String?  @map("contactName")
  creaNumber              String?  @map("creaNumber")
  establishmentDate       DateTime? @map("establishmentDate")
  fantasyName             String?  @map("fantasyName")
  note                    String?  @map("note")
  site                    String?  @map("site")
  shareCapital            Decimal? @map("shareCapital")
  stateRegistrationNumber String?  @map("stateRegistrationNumber")
  technicalManager        String?  @map("technicalManager")

  // Campos gerais da API Sienge
  personType              String?  @map("personType")
  activityId              Int?     @map("activityId")
  activityDescription     String?  @map("activityDescription")

  // Campos derivados dos telefones
  telefonePrincipal       String?  @map("telefone_principal")
  telefonePrincipalTipo   String?  @map("telefone_principal_tipo")
  totalTelefones          Int?     @default(0) @map("total_telefones")

  // Campos derivados dos endereços
  enderecoPrincipal       String?  @map("endereco_principal")
  cidadePrincipal         String?  @map("cidade_principal")
  estadoPrincipal         String?  @map("estado_principal")
  cepPrincipal            String?  @map("cep_principal")
  totalEnderecos          Int?     @default(0) @map("total_enderecos")

  // Campos derivados do cônjuge
  temConjuge              Boolean? @default(false) @map("tem_conjuge")
  nomeConjuge             String?  @map("nome_conjuge")
  cpfConjuge              String?  @map("cpf_conjuge")

  // Campos JSON para telefones e endereços
  phones                  Json?    @map("phones")
  addresses               Json?    @map("addresses")

  // Novos campos JSON da API Sienge
  procurators             Json?    @map("procurators")
  contacts                Json?    @map("contacts")
  subTypes                Json?    @map("subTypes")
  spouse                  Json?    @map("spouse")
  familyIncome            Json?    @map("familyIncome")

  // Relacionamentos
  telefones               ClienteTelefone[]
  enderecos               ClienteEndereco[]
  procuradores            ClienteProcurador[]
  contatos                ClienteContato[]
  subtipos                ClienteSubtipo[]
  rendaFamiliar           ClienteRendaFamiliar[]

  // Relacionamentos
  empresa                  Empresa? @relation(fields: [idEmpresa], references: [idEmpresa])

  @@index([nomeCompleto])
  @@index([ativo])
  @@index([dataCadastro])
  @@index([idEmpresa])
  @@index([nomeCompleto, ativo])
  @@index([idEmpresa, ativo])
  @@index([dataAtualizacao])
  @@index([telefonePrincipal])
  @@index([cidadePrincipal])
  @@index([estadoPrincipal])
  @@index([temConjuge])
  @@map("clientes")
}

model ContratoVenda {
  id                    Int      @id @map("id")
  companyId             Int?     @map("companyId")
  internalCompanyId     Int?     @map("internalCompanyId")
  companyName           String?  @map("companyName")
  enterpriseId          Int?     @map("enterpriseId")
  internalEnterpriseId  Int?     @map("internalEnterpriseId")
  enterpriseName        String?  @map("enterpriseName")
  receivableBillId      Int?     @map("receivableBillId")
  cancellationPayableBillId Int? @map("cancellationPayableBillId")
  contractDate          DateTime? @map("contractDate")
  issueDate             DateTime? @map("issueDate")
  accountingDate        DateTime? @map("accountingDate")
  expectedDeliveryDate  DateTime? @map("expectedDeliveryDate")
  keysDeliveredAt       DateTime? @map("keysDeliveredAt")
  number                String?  @map("number")
  externalId            String?  @map("externalId")
  correctionType        String?  @map("correctionType")
  situation             String?  @map("situation")
  discountType          String?  @map("discountType")
  discountPercentage    Decimal? @map("discountPercentage")
  value                 Decimal? @map("value")
  totalSellingValue     Decimal? @map("totalSellingValue")
  cancellationDate      DateTime? @map("cancellationDate")
  totalCancellationAmount Decimal? @map("totalCancellationAmount")
  cancellationReason    String?  @map("cancellationReason")
  financialInstitutionNumber String? @map("financialInstitutionNumber")
  financialInstitutionDate DateTime? @map("financialInstitutionDate")
  proRataIndexer        Int?     @map("proRataIndexer")
  interestType          String?  @map("interestType")
  interestPercentage    Decimal? @map("interestPercentage")
  fineRate              Decimal? @map("fineRate")
  lateInterestCalculationType String? @map("lateInterestCalculationType")
  dailyLateInterestValue Decimal? @map("dailyLateInterestValue")
  containsRemadeInstallments Boolean? @map("containsRemadeInstallments")
  specialClause         String?  @map("specialClause")

  // Campos adicionais baseados na API (datas importantes do Sienge)
  dataCriacaoSienge           DateTime? @map("data_criacao_sienge")
  dataUltimaAtualizacaoSienge DateTime? @map("data_ultima_atualizacao_sienge")

  // Dados de clientes do contrato (JSON)
  salesContractCustomers Json?   @map("salesContractCustomers")

  // Campos derivados dos clientes (extraídos do JSON para facilitar análises)
  clientePrincipalNome        String? @map("cliente_principal_nome")
  clientePrincipalId          Int?    @map("cliente_principal_id")
  totalClientes              Int?    @map("total_clientes")
  clientePrincipalParticipacao Decimal? @map("cliente_principal_participacao")
  tipoContratoCliente        String? @map("tipo_contrato_cliente")

  // Dados de unidades do contrato (JSON)
  salesContractUnits     Json?   @map("salesContractUnits")

  // Dados de condições de pagamento (JSON)
  paymentConditions      Json?   @map("paymentConditions")

  // Campos derivados das condições de pagamento (extraídos do JSON para facilitar análises)
  valorTotalContrato         Decimal? @map("valor_total_contrato")
  valorTotalPago            Decimal? @map("valor_total_pago")
  saldoDevedorTotal         Decimal? @map("saldo_devedor_total")
  totalCondicoesPagamento   Int?     @map("total_condicoes_pagamento")
  totalParcelasContrato     Int?     @map("total_parcelas_contrato")
  parcelasPagasContrato     Int?     @map("parcelas_pagas_contrato")
  formaPagamentoPrincipal   String?  @map("forma_pagamento_principal")
  indexadorPrincipal        String?  @map("indexador_principal")
  temFinanciamento          Boolean? @map("tem_financiamento")
  percentualPago            Decimal? @map("percentual_pago")

  // Dados de corretores (JSON)
  brokers                Json?   @map("brokers")

  // Dados de comissões (JSON)
  linkedCommissions      Json?   @map("linkedCommissions")

  // Campos derivados das comissões (extraídos do JSON para facilitar análises)
  temComissao                      Boolean? @map("tem_comissao")
  idContratoComissao               Int?     @map("id_contrato_comissao")
  totalComissoes                   Int?     @map("total_comissoes")
  valorTotalComissao               Decimal? @map("valor_total_comissao")
  faixaValorComissao               String?  @map("faixa_valor_comissao")
  percentualComissaoSobreContrato  Decimal? @map("percentual_comissao_sobre_contrato")

  // Links para recursos relacionados (JSON)
  links                  Json?   @map("links")

  // Campos de controle
  dataCadastro           DateTime @default(now()) @map("dataCadastro")
  dataAtualizacao        DateTime? @map("dataAtualizacao")

  // Relacionamentos
  empreendimento         Empreendimento? @relation(fields: [enterpriseId], references: [id], onDelete: SetNull, onUpdate: Cascade)
  unidades               Unidade[]
  contratoClientes       ContratoCliente[]
  contratoUnidades       ContratoUnidade[]
  contratoCondicoesPagamento ContratoCondicaoPagamento[]

  @@index([number])
  @@index([situation])
  @@index([contractDate])
  @@index([issueDate])
  @@index([enterpriseId])
  @@index([companyId])
  @@index([externalId])
  @@index([situation, contractDate])
  @@index([enterpriseId, situation])
  @@map("contratos_venda")
}

model Empreendimento {
  id                        Int      @id @map("id")
  nome                      String   @map("nome")
  nomeComercial             String?  @map("nomeComercial")
  observacaoEmpreendimento  String?  @map("observacaoEmpreendimento")
  cnpj                      String?  @map("cnpj")
  tipo                      String?  @map("tipo")
  endereco                  String?  @map("endereco")
  dataCadastro              DateTime @default(now()) @map("dataCadastro")
  dataAtualizacao           DateTime? @map("dataAtualizacao")
  criadoPor                 String?  @map("criadoPor")
  modificadoPor             String?  @map("modificadoPor")
  idEmpresa                 Int?     @map("idEmpresa")
  nomeEmpresa               String?  @map("nomeEmpresa")
  idBaseCustos              Int?     @map("idBaseCustos")
  descricaoBaseCustos       String?  @map("descricaoBaseCustos")
  idTipoObra                Int?     @map("idTipoObra")
  descricaoTipoObra         String?  @map("descricaoTipoObra")

  // Relacionamentos
  unidades                  Unidade[]
  contratos                 ContratoVenda[]

  @@index([nome])
  @@index([tipo])
  @@index([idEmpresa])
  @@map("empreendimentos")
}

model Unidade {
  id                    Int      @id @map("id")
  idEmpreendimento      Int?     @map("idEmpreendimento")
  idContrato            Int?     @map("idContrato")
  idIndexador           Int?     @map("idIndexador")
  nome                  String   @map("nome")
  tipoImovel            String?  @map("tipoImovel")
  observacao            String?  @map("observacao")
  estoqueComercial      String?  @map("estoqueComercial")
  latitude              String?  @map("latitude")
  longitude             String?  @map("longitude")
  matricula             String?  @map("matricula")
  dataEntrega           DateTime? @map("dataEntrega")
  areaPrivativa         Decimal? @map("areaPrivativa")
  areaComum             Decimal? @map("areaComum")
  areaTerreno           Decimal? @map("areaTerreno")
  areaComumNaoProporcional Decimal? @map("areaComumNaoProporcional")
  fracaoIdeal           Decimal? @map("fracaoIdeal")
  fracaoIdealM2         Decimal? @map("fracaoIdealM2")
  fracaoVGV             Decimal? @map("fracaoVGV")
  quantidadeIndexada    Decimal? @map("quantidadeIndexada")
  adimplenciaPremiada   Decimal? @map("adimplenciaPremiada")
  valorTerreno          Decimal? @map("valorTerreno")
  pavimento             String?  @map("pavimento")
  numeroContrato        String?  @map("numeroContrato")
  areaUtil              Decimal? @map("areaUtil")
  valorIPTU             Decimal? @map("valorIPTU")
  inscricaoImobiliaria  String?  @map("inscricaoImobiliaria")
  dataCadastro          DateTime @default(now()) @map("dataCadastro")
  dataAtualizacao       DateTime? @map("dataAtualizacao")
  scheduledDeliveryDate DateTime? @map("scheduledDeliveryDate")

  // Campos derivados dos child units
  totalUnidadesFilhas   Int?     @default(0) @map("total_unidades_filhas")
  principalUnidadeFilha String?  @map("principal_unidade_filha")
  principalUnidadeFilhaId Int?   @map("principal_unidade_filha_id")

  // Campos derivados dos groupings
  totalAgrupamentos     Int?     @default(0) @map("total_agrupamentos")
  agrupamentoPrincipal  String?  @map("agrupamento_principal")
  tipoAgrupamentoPrincipal String? @map("tipo_agrupamento_principal")

  // Campos derivados dos special values
  totalValoresEspeciais Int?     @default(0) @map("total_valores_especiais")
  valorEspecialTotal    Decimal? @default(0) @map("valor_especial_total")
  tipoValorEspecialPrincipal String? @map("tipo_valor_especial_principal")

  // Campos derivados dos links
  totalLinks            Int?     @default(0) @map("total_links")
  linkPrincipalTipo     String?  @map("link_principal_tipo")
  linkPrincipalUrl      String?  @map("link_principal_url")

  // Novos campos JSON da API Sienge
  childUnits            Json?    @map("childunits")
  groupings             Json?    @map("groupings")
  specialValues         Json?    @map("specialvalues")
  links                 Json?    @map("links")

  // Relacionamentos
  empreendimento        Empreendimento? @relation(fields: [idEmpreendimento], references: [id])
  contrato              ContratoVenda? @relation(fields: [idContrato], references: [id])

  // Relacionamentos com tabelas auxiliares
  unidadesFilhas        UnidadeFilha[]
  agrupamentos          UnidadeAgrupamento[]
  valoresEspeciais      UnidadeValorEspecial[]
  linksRelacionados     UnidadeLink[]

  @@index([nome])
  @@index([idEmpreendimento])
  @@index([idContrato])
  @@index([estoqueComercial])
  @@index([totalUnidadesFilhas])
  @@index([totalAgrupamentos])
  @@index([totalValoresEspeciais])
  @@index([agrupamentoPrincipal])
  @@map("unidades")
}

model Webhook {
  id        String   @id @map("id")
  url       String   @map("url")
  token     String?  @map("token")
  events    Json     @map("events")
  createdAt DateTime @default(now()) @map("createdAt")
  updatedAt DateTime @updatedAt @map("updatedAt")

  @@index([url])
  @@map("webhooks")
}

model ContratoCliente {
  id                     Int      @id @default(autoincrement()) @map("id")
  contratoId             Int      @map("contrato_id")
  clienteSiengeId        Int      @map("cliente_sienge_id")
  nome                   String   @map("nome")
  isMain                 Boolean  @default(false) @map("is_main")
  isSpouse               Boolean  @default(false) @map("is_spouse")
  participacaoPercentual Decimal? @map("participacao_percentual")
  ordemNoContrato        Int      @default(1) @map("ordem_no_contrato")
  createdAt              DateTime @default(now()) @map("created_at")
  updatedAt              DateTime @default(now()) @map("updated_at")

  // Relacionamentos
  contrato               ContratoVenda @relation(fields: [contratoId], references: [id], onDelete: Cascade)

  @@unique([contratoId, clienteSiengeId, ordemNoContrato], name: "uk_contrato_cliente_ordem")
  @@index([contratoId])
  @@index([clienteSiengeId])
  @@index([isMain])
  @@index([nome])
  @@map("contrato_clientes")
}

model ContratoUnidade {
  id                     Int      @id @default(autoincrement()) @map("id")
  contratoId             Int      @map("contrato_id")
  unidadeSiengeId        Int      @map("unidade_sienge_id")
  nome                   String   @map("nome")
  isMain                 Boolean  @default(false) @map("is_main")
  participacaoPercentual Decimal? @map("participacao_percentual")
  tipoUnidade            String?  @map("tipo_unidade")
  createdAt              DateTime @default(now()) @map("created_at")
  updatedAt              DateTime @default(now()) @map("updated_at")

  // Relacionamentos
  contrato               ContratoVenda @relation(fields: [contratoId], references: [id], onDelete: Cascade)

  @@unique([contratoId, unidadeSiengeId], name: "uk_contrato_unidade")
  @@index([contratoId])
  @@index([unidadeSiengeId])
  @@index([isMain])
  @@index([nome])
  @@index([tipoUnidade])
  @@map("contrato_unidades")
}

model ContratoCondicaoPagamento {
  id                     Int      @id @default(autoincrement()) @map("id")
  contratoId             Int      @map("contrato_id")
  ordemCondicao          Int      @map("ordem_condicao")

  // Identificação da condição
  tipoCondicaoId         String?  @map("tipo_condicao_id")
  tipoCondicaoNome       String?  @map("tipo_condicao_nome")
  sequenceId             Int?     @map("sequence_id")
  orderNumber            Int?     @map("order_number")

  // Indexação
  indexadorId            Int?     @map("indexador_id")
  indexadorNome          String?  @map("indexador_nome")

  // Valores financeiros
  valorTotal             Decimal? @map("valor_total")
  valorPago              Decimal? @map("valor_pago")
  saldoDevedor           Decimal? @map("saldo_devedor")
  valorTotalJuros        Decimal? @map("valor_total_juros")

  // Parcelas
  numeroParcelas         Int?     @map("numero_parcelas")
  parcelasAbertas        Int?     @map("parcelas_abertas")

  // Datas
  dataPrimeiroPagamento  DateTime? @map("data_primeiro_pagamento")
  dataBase               DateTime? @map("data_base")
  dataBaseJuros          DateTime? @map("data_base_juros")

  // Juros e condições
  percentualJuros        Decimal? @map("percentual_juros")
  tipoJuros              String?  @map("tipo_juros")
  periodoCarenciaMeses   Int?     @map("periodo_carencia_meses")

  // Status
  status                 String?  @map("status")
  statusCondicao         String?  @map("status_condicao")
  pagoAntesAditivo       Boolean? @map("pago_antes_aditivo")

  // Portador
  portadorId             Int?     @map("portador_id")
  portadorNome           String?  @map("portador_nome")

  // Controle
  createdAt              DateTime @default(now()) @map("created_at")
  updatedAt              DateTime @default(now()) @map("updated_at")

  // Relacionamentos
  contrato               ContratoVenda @relation(fields: [contratoId], references: [id], onDelete: Cascade)

  @@unique([contratoId, ordemCondicao], name: "uk_contrato_condicao_ordem")
  @@index([contratoId])
  @@index([tipoCondicaoId])
  @@index([indexadorNome])
  @@index([statusCondicao])
  @@index([valorTotal])
  @@index([saldoDevedor])
  @@map("contrato_condicoes_pagamento")
}

// ============================================
// TABELAS AUXILIARES DE CLIENTES
// ============================================

model ClienteTelefone {
  id              Int      @id @default(autoincrement())
  clienteId       Int      @map("cliente_id")
  ordemTelefone   Int      @map("ordem_telefone")

  // Phone details
  tipo            String?  @map("tipo")
  numero          String?  @map("numero")
  codigoPais      String?  @map("codigo_pais")
  principal       Boolean? @default(false) @map("principal")
  observacao      String?  @map("observacao")

  // Control fields
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @default(now()) @map("updated_at")

  // Relacionamentos
  cliente         Cliente  @relation(fields: [clienteId], references: [idCliente], onDelete: Cascade)

  @@unique([clienteId, ordemTelefone], name: "uk_cliente_telefone_ordem")
  @@index([clienteId])
  @@index([principal])
  @@map("cliente_telefones")
}

model ClienteEndereco {
  id                      Int      @id @default(autoincrement())
  clienteId               Int      @map("cliente_id")
  ordemEndereco           Int      @map("ordem_endereco")

  // Address details
  tipo                    String?  @map("tipo")
  logradouro              String?  @map("logradouro")
  numero                  String?  @map("numero")
  complemento             String?  @map("complemento")
  bairro                  String?  @map("bairro")
  cidade                  String?  @map("cidade")
  estado                  String?  @map("estado")
  cep                     String?  @map("cep")
  codigoCidade            Int?     @map("codigo_cidade")
  enderecoCorrespondencia Boolean? @default(false) @map("endereco_correspondencia")

  // Control fields
  createdAt               DateTime @default(now()) @map("created_at")
  updatedAt               DateTime @default(now()) @map("updated_at")

  // Relacionamentos
  cliente                 Cliente  @relation(fields: [clienteId], references: [idCliente], onDelete: Cascade)

  @@unique([clienteId, ordemEndereco], name: "uk_cliente_endereco_ordem")
  @@index([clienteId])
  @@index([enderecoCorrespondencia])
  @@index([cidade])
  @@index([estado])
  @@map("cliente_enderecos")
}

model ClienteProcurador {
  id                Int      @id @default(autoincrement())
  clienteId         Int      @map("cliente_id")
  ordemProcurador   Int      @map("ordem_procurador")

  // Procurator details
  nome              String?  @map("nome")
  cpf               String?  @map("cpf")
  tipo              String?  @map("tipo")
  observacao        String?  @map("observacao")

  // Control fields
  createdAt         DateTime @default(now()) @map("created_at")
  updatedAt         DateTime @default(now()) @map("updated_at")

  // Relacionamentos
  cliente           Cliente  @relation(fields: [clienteId], references: [idCliente], onDelete: Cascade)

  @@unique([clienteId, ordemProcurador], name: "uk_cliente_procurador_ordem")
  @@index([clienteId])
  @@map("cliente_procuradores")
}

model ClienteContato {
  id            Int      @id @default(autoincrement())
  clienteId     Int      @map("cliente_id")
  ordemContato  Int      @map("ordem_contato")

  // Contact details
  nome          String?  @map("nome")
  telefone      String?  @map("telefone")
  email         String?  @map("email")
  tipo          String?  @map("tipo")
  observacao    String?  @map("observacao")

  // Control fields
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @default(now()) @map("updated_at")

  // Relacionamentos
  cliente       Cliente  @relation(fields: [clienteId], references: [idCliente], onDelete: Cascade)

  @@unique([clienteId, ordemContato], name: "uk_cliente_contato_ordem")
  @@index([clienteId])
  @@map("cliente_contatos")
}

model ClienteSubtipo {
  id            Int      @id @default(autoincrement())
  clienteId     Int      @map("cliente_id")
  ordemSubtipo  Int      @map("ordem_subtipo")

  // Subtype details
  subtipo       String?  @map("subtipo")
  descricao     String?  @map("descricao")

  // Control fields
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @default(now()) @map("updated_at")

  // Relacionamentos
  cliente       Cliente  @relation(fields: [clienteId], references: [idCliente], onDelete: Cascade)

  @@unique([clienteId, ordemSubtipo], name: "uk_cliente_subtipo_ordem")
  @@index([clienteId])
  @@map("cliente_subtipos")
}

model ClienteRendaFamiliar {
  id            Int      @id @default(autoincrement())
  clienteId     Int      @map("cliente_id")
  ordemRenda    Int      @map("ordem_renda")

  // Family income details
  nomeParente   String?  @map("nome_parente")
  parentesco    String?  @map("parentesco")
  valorRenda    Decimal? @map("valor_renda")
  observacao    String?  @map("observacao")

  // Control fields
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @default(now()) @map("updated_at")

  // Relacionamentos
  cliente       Cliente  @relation(fields: [clienteId], references: [idCliente], onDelete: Cascade)

  @@unique([clienteId, ordemRenda], name: "uk_cliente_renda_ordem")
  @@index([clienteId])
  @@map("cliente_renda_familiar")
}

// ============================================
// TABELAS AUXILIARES DE UNIDADES
// ============================================

model UnidadeFilha {
  id                Int      @id @default(autoincrement())
  unidadePaiId      Int      @map("unidade_pai_id")
  ordemFilha        Int      @map("ordem_filha")

  // Child unit details
  unidadeFilhaId    Int?     @map("unidade_filha_id")
  nomeUnidadeFilha  String?  @map("nome_unidade_filha")
  tipoUnidadeFilha  String?  @map("tipo_unidade_filha")
  areaUnidadeFilha  Decimal? @map("area_unidade_filha")
  statusUnidadeFilha String? @map("status_unidade_filha")

  // Control fields
  createdAt         DateTime @default(now()) @map("created_at")
  updatedAt         DateTime @default(now()) @map("updated_at")

  // Relacionamentos
  unidadePai        Unidade  @relation(fields: [unidadePaiId], references: [id], onDelete: Cascade)

  @@unique([unidadePaiId, ordemFilha], name: "uk_unidade_filha_ordem")
  @@index([unidadePaiId])
  @@index([unidadeFilhaId])
  @@map("unidade_filhas")
}

model UnidadeAgrupamento {
  id                  Int      @id @default(autoincrement())
  unidadeId           Int      @map("unidade_id")
  ordemAgrupamento    Int      @map("ordem_agrupamento")

  // Grouping details
  tipoAgrupamento     String?  @map("tipo_agrupamento")
  nomeAgrupamento     String?  @map("nome_agrupamento")
  descricaoAgrupamento String? @map("descricao_agrupamento")
  codigoAgrupamento   String?  @map("codigo_agrupamento")
  nivelHierarquia     Int?     @map("nivel_hierarquia")

  // Control fields
  createdAt           DateTime @default(now()) @map("created_at")
  updatedAt           DateTime @default(now()) @map("updated_at")

  // Relacionamentos
  unidade             Unidade  @relation(fields: [unidadeId], references: [id], onDelete: Cascade)

  @@unique([unidadeId, ordemAgrupamento], name: "uk_unidade_agrupamento_ordem")
  @@index([unidadeId])
  @@index([tipoAgrupamento])
  @@map("unidade_agrupamentos")
}

model UnidadeValorEspecial {
  id              Int      @id @default(autoincrement())
  unidadeId       Int      @map("unidade_id")
  ordemValor      Int      @map("ordem_valor")

  // Special value details
  tipoValor       String?  @map("tipo_valor")
  nomeValor       String?  @map("nome_valor")
  valorMonetario  Decimal? @map("valor_monetario")
  moeda           String?  @default("BRL") @map("moeda")
  descricaoValor  String?  @map("descricao_valor")
  dataReferencia  DateTime? @map("data_referencia")
  statusValor     String?  @map("status_valor")

  // Control fields
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @default(now()) @map("updated_at")

  // Relacionamentos
  unidade         Unidade  @relation(fields: [unidadeId], references: [id], onDelete: Cascade)

  @@unique([unidadeId, ordemValor], name: "uk_unidade_valor_ordem")
  @@index([unidadeId])
  @@index([tipoValor])
  @@index([valorMonetario])
  @@map("unidade_valores_especiais")
}

model UnidadeLink {
  id            Int      @id @default(autoincrement())
  unidadeId     Int      @map("unidade_id")
  ordemLink     Int      @map("ordem_link")

  // Link details
  rel           String?  @map("rel")
  href          String?  @map("href")
  tipoLink      String?  @map("tipo_link")
  descricaoLink String?  @map("descricao_link")
  ativo         Boolean? @default(true) @map("ativo")

  // Control fields
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @default(now()) @map("updated_at")

  // Relacionamentos
  unidade       Unidade  @relation(fields: [unidadeId], references: [id], onDelete: Cascade)

  @@unique([unidadeId, ordemLink], name: "uk_unidade_link_ordem")
  @@index([unidadeId])
  @@index([rel])
  @@map("unidade_links")
}

// ============================================
// TABELAS FINANCEIRAS E DE FORNECEDORES
// ============================================

model Portador {
  id    Int    @id @map("id")
  nome  String @map("nome")

  @@map("portadores")
}

model Credor {
  id                    Int      @id @map("id")
  nome                  String   @map("nome")
  nomeFantasia          String?  @map("nome_fantasia")
  cpf                   String?  @map("cpf")
  cnpj                  String?  @map("cnpj")
  fornecedor            String?  @map("fornecedor")
  corretor              String?  @map("corretor")
  funcionario           String?  @map("funcionario")
  ativo                 Boolean  @default(true) @map("ativo")
  inscricaoEstadual     String?  @map("inscricao_estadual")
  tipoInscricaoEstadual String?  @map("tipo_inscricao_estadual")
  tipoPagamentoId       Int?     @map("tipo_pagamento_id")

  // Endereço embutido
  enderecoCidadeId      Int?     @map("endereco_cidade_id")
  enderecoCidadeNome    String?  @map("endereco_cidade_nome")
  enderecoRua           String?  @map("endereco_rua")
  enderecoNumero        String?  @map("endereco_numero")
  enderecoComplemento   String?  @map("endereco_complemento")
  enderecoBairro        String?  @map("endereco_bairro")
  enderecoEstado        String?  @map("endereco_estado")
  enderecoCep           String?  @map("endereco_cep")

  // Arrays como JSON
  telefones             Json?    @map("telefones")

  // Control fields
  createdAt             DateTime @default(now()) @map("created_at")
  updatedAt             DateTime @updatedAt @map("updated_at")

  // Relacionamentos
  titulosPagar          TituloPagar[]
  contratosSuprimento   ContratoSuprimento[]

  @@index([nome])
  @@index([cnpj])
  @@index([cpf])
  @@index([ativo])
  @@map("credores")
}

model TituloPagar {
  id                       Int       @id @map("id")
  devedorId                Int?      @map("devedor_id")
  credorId                 Int?      @map("credor_id")
  documentoIdentificacaoId String?   @map("documento_identificacao_id")
  numeroDocumento          String?   @map("numero_documento")
  dataEmissao              DateTime? @map("data_emissao")
  numeroParcelas           Int?      @map("numero_parcelas")
  valorTotalNota           Decimal?  @map("valor_total_nota") @db.Decimal(15, 2)
  observacoes              String?   @map("observacoes") @db.Text
  desconto                 Decimal?  @map("desconto") @db.Decimal(15, 2)
  status                   String?   @map("status")
  origemId                 String?   @map("origem_id")
  usuarioCadastroId        String?   @map("usuario_cadastro_id")
  usuarioCadastroNome      String?   @map("usuario_cadastro_nome")
  dataCadastro             DateTime? @map("data_cadastro")
  usuarioAlteracaoId       String?   @map("usuario_alteracao_id")
  usuarioAlteracaoNome     String?   @map("usuario_alteracao_nome")
  dataAlteracao            DateTime? @map("data_alteracao")
  numeroChaveAcesso        String?   @map("numero_chave_acesso")

  // Control fields
  createdAt                DateTime  @default(now()) @map("created_at")
  updatedAt                DateTime  @updatedAt @map("updated_at")

  // Relacionamentos
  credor                   Credor?   @relation(fields: [credorId], references: [id])
  empresa                  Empresa?  @relation(fields: [devedorId], references: [idEmpresa])
  extratos                 ExtratoContas[]

  @@index([credorId])
  @@index([devedorId])
  @@index([dataEmissao])
  @@index([status])
  @@index([origemId])
  @@map("titulos_pagar")
}

model ExtratoContas {
  id                       Int       @id @map("id")
  valor                    Decimal?  @map("valor") @db.Decimal(15, 2)
  data                     DateTime  @map("data")
  numeroDocumento          String?   @map("numero_documento")
  descricao                String?   @map("descricao")
  documentoId              String?   @map("documento_id")
  tipo                     String?   @map("tipo") // Income/Expense
  dataReconciliacao        DateTime? @map("data_reconciliacao")
  tituloId                 Int?      @map("titulo_id")
  numeroParcela            Int?      @map("numero_parcela")
  origemExtrato            String?   @map("origem_extrato")
  tipoExtrato              String?   @map("tipo_extrato")
  observacoesExtrato       String?   @map("observacoes_extrato")

  // Novos campos
  empresaId                Int?      @map("empresa_id")
  contaId                  Int?      @map("conta_id")
  centroCustoId            Int?      @map("centro_custo_id")
  planoFinanceiroId        String?   @map("plano_financeiro_id")
  saldo                    Decimal?  @map("saldo") @db.Decimal(15, 2)
  conciliado               Boolean   @default(false) @map("conciliado")
  referencia               String?   @map("referencia")
  beneficiario             String?   @map("beneficiario")
  tags                     Json?     @map("tags")

  // Arrays como JSON
  categoriasOrcamentarias  Json?     @map("categorias_orcamentarias")

  // Control fields
  createdAt                DateTime  @default(now()) @map("created_at")
  updatedAt                DateTime  @updatedAt @map("updated_at")

  // Relacionamentos
  titulo                   TituloPagar? @relation(fields: [tituloId], references: [id])
  empresa                  Empresa?     @relation(fields: [empresaId], references: [idEmpresa])
  centroCusto              CentroCusto? @relation(fields: [centroCustoId], references: [id])
  planoFinanceiro          PlanoFinanceiro? @relation(fields: [planoFinanceiroId], references: [id])
  apropriacoes             ExtratoApropriacao[]

  @@index([tituloId])
  @@index([data])
  @@index([tipo])
  @@index([empresaId])
  @@index([centroCustoId])
  @@index([planoFinanceiroId])
  @@map("extrato_contas")
}

model ContratoSuprimento {
  id                       Int       @id @default(autoincrement()) @map("id")
  documentoId              String?   @map("documento_id")
  numeroContrato           String    @unique @map("numero_contrato")
  fornecedorId             Int?      @map("fornecedor_id")
  clienteId                Int?      @map("cliente_id")
  empresaId                Int?      @map("empresa_id")
  empresaNome              String?   @map("empresa_nome")
  responsavelId            String?   @map("responsavel_id")
  responsavelNome          String?   @map("responsavel_nome")
  status                   String?   @map("status")
  statusId                 String?   @map("status_id")
  statusAprovacao          String?   @map("status_aprovacao")
  autorizado               Boolean   @default(false) @map("autorizado")
  dataContrato             DateTime? @map("data_contrato")
  dataInicio               DateTime? @map("data_inicio")
  dataFim                  DateTime? @map("data_fim")
  objeto                   String?   @map("objeto") @db.Text
  observacoesInternas      String?   @map("observacoes_internas") @db.Text
  tipoContrato             String?   @map("tipo_contrato")
  tipoRegistro             String?   @map("tipo_registro")
  tipoItem                 String?   @map("tipo_item")
  valorTotalMaoObra        Decimal?  @map("valor_total_mao_obra") @db.Decimal(15, 2)
  valorTotalMaterial       Decimal?  @map("valor_total_material") @db.Decimal(15, 2)
  consistente              Boolean   @default(true) @map("consistente")

  // Arrays como JSON
  edificios                Json?     @map("edificios")

  // Control fields
  createdAt                DateTime  @default(now()) @map("created_at")
  updatedAt                DateTime  @updatedAt @map("updated_at")

  // Relacionamentos
  fornecedor               Credor?   @relation(fields: [fornecedorId], references: [id])
  empresa                  Empresa?  @relation(fields: [empresaId], references: [idEmpresa])

  @@index([fornecedorId])
  @@index([empresaId])
  @@index([status])
  @@index([dataContrato])
  @@map("contratos_suprimento")
}

model CentroCusto {
  id                       Int       @id @map("id")
  nome                     String    @map("nome")
  cnpj                     String?   @map("cnpj")
  empresaId                Int?      @map("empresa_id")
  ativo                    Boolean   @default(true) @map("ativo")

  // Arrays como JSON
  buildingSectors          Json?     @map("building_sectors")
  availableAccounts        Json?     @map("available_accounts")

  // Control fields
  createdAt                DateTime  @default(now()) @map("created_at")
  updatedAt                DateTime  @updatedAt @map("updated_at")

  // Relacionamentos
  empresa                  Empresa?  @relation(fields: [empresaId], references: [idEmpresa])
  extratos                 ExtratoContas[]
  apropriacoes             ExtratoApropriacao[]

  @@index([nome])
  @@index([empresaId])
  @@index([ativo])
  @@map("centro_custos")
}

model PlanoFinanceiro {
  id                       String    @id @map("id")
  nome                     String    @map("nome")
  tipoConta                String?   @map("tipo_conta") // T ou R
  flRedutora               String?   @map("fl_redutora") // S ou N
  flAtiva                  String?   @map("fl_ativa") // S ou N
  flAdiantamento           String?   @map("fl_adiantamento") // S ou N
  flImposto                String?   @map("fl_imposto") // S ou N

  // Control fields
  createdAt                DateTime  @default(now()) @map("created_at")
  updatedAt                DateTime  @updatedAt @map("updated_at")

  // Relacionamentos
  extratos                 ExtratoContas[]
  apropriacoes             ExtratoApropriacao[]

  @@index([nome])
  @@index([flAtiva])
  @@map("planos_financeiros")
}

model ExtratoApropriacao {
  id                       Int       @id @default(autoincrement()) @map("id")
  extratoContaId           Int       @map("extrato_conta_id")
  centroCustoId            Int?      @map("centro_custo_id")
  planoFinanceiroId        String?   @map("plano_financeiro_id")
  percentual               Decimal?  @map("percentual") @db.Decimal(5, 2)
  valorApropriado          Decimal?  @map("valor_apropriado") @db.Decimal(15, 2)

  // Control fields
  createdAt                DateTime  @default(now()) @map("created_at")
  updatedAt                DateTime  @updatedAt @map("updated_at")

  // Relacionamentos
  extratoContas            ExtratoContas @relation(fields: [extratoContaId], references: [id])
  centroCusto              CentroCusto?  @relation(fields: [centroCustoId], references: [id])
  planoFinanceiro          PlanoFinanceiro? @relation(fields: [planoFinanceiroId], references: [id])

  @@index([extratoContaId])
  @@index([centroCustoId])
  @@index([planoFinanceiroId])
  @@map("extrato_apropriacoes")
}