# Dockerfile único para Desenvolvimento e Produção
FROM node:18-alpine AS base

# Build arguments para controlar o ambiente
ARG NODE_ENV=production
ARG BUILD_TARGET=production

# Instalar dependências necessárias para o Alpine
RUN apk add --no-cache libc6-compat curl

# Definir diretório de trabalho
WORKDIR /app

# Copiar arquivos de dependências
COPY package*.json ./

# Instalar dependências baseado no ambiente
RUN if [ "$BUILD_TARGET" = "development" ]; then \
        npm ci && npm cache clean --force; \
    else \
        npm ci --only=production && npm cache clean --force; \
    fi

# Copiar código fonte
COPY . .

# Criar usuário não-root
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

# Criar diretório de logs
RUN mkdir -p logs && chown nextjs:nodejs logs

# Alterar proprietário dos arquivos
RUN chown -R nextjs:nodejs /app

# Mudar para usuário não-root
USER nextjs

# Expor porta
EXPOSE 3000

# Definir variáveis de ambiente
ENV PORT=3000
ENV NODE_ENV=${NODE_ENV}

# Comando de inicialização baseado no ambiente
CMD if [ "$NODE_ENV" = "development" ]; then \
        npm run dev; \
    else \
        npm run build && npm start; \
    fi
